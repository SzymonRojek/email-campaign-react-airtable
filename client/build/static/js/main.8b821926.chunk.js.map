{"version":3,"sources":["api/index.js","useFetchData.js","components/Navigation/MainNavigation/StyledTabs/StyledTabs.js","components/Navigation/MainNavigation/DrawerMenu/DrawerMenu.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/SubNavigation/StyledLink/StyledLink.js","components/Navigation/SubNavigation/SubNavigation.js","components/StyledFooter/StyledFooter.js","img/graphic.svg","pages/homePage/HomePage.js","components/Table/ContainerTable.js","components/Table/HeadTable.js","components/Table/BodyTable.js","helpers/getStatusColor.js","helpers/getFormattedData.js","helpers/isEven.js","helpers/validationSubscriber.js","helpers/validationCampaign.js","helpers/sortDataAlphabetically.js","helpers/capitalizeFirstLetter.js","helpers/getLatestAddedItem.js","components/SubscriberTableRow/SubscriberTableRow.js","components/SubscribersList/SubscribersList.js","components/DisplayMessage/Error/Error.js","components/DisplayMessage/Loader/Loader.js","components/DisplayMessage/InfoPopup/InfoPopup.js","components/DisplayMessage/ConfirmPopup/ConfirmPopup.js","components/StyledHeading/StyledHeading.js","data/dataHeadTable.js","pages/subscribers/SubscribersPage.js","components/SubscriberStatus/SubscriberStatus.js","pages/subscribers/SubscribersStatusPage.js","useFetchDetailsById.js","pages/subscribers/SubscriberDetailsPage.js","components/Inputs/SelectInputController/SelectInputController.js","components/Inputs/TextInputController/CustomTextInput/CustomTextInput.js","components/Inputs/TextInputController/TextInputController.js","components/Inputs/StyledCheckbox/StyledCheckbox.js","components/StyledButton/StyledButton.js","pages/subscribers/AddSubscriberPage.js","data/dataHeadEmailTable.js","components/CampaignTableRow/success.png","components/CampaignTableRow/CampaignTableRow.js","components/CampaignsList/CampaignsList.js","pages/campaigns/CampaignsPage.js","components/CampaignStatus/CampaignStatus.js","pages/campaigns/CampaignsStatusPage.js","components/FormCampaign/FormCampaign.js","pages/campaigns/CampaignEditPage.js","pages/campaigns/AddCampaignPage.js","data/dataLinksNavigation.js","pages/notFoundPage/NotFoundPage.js","AppContainer.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["request","endpoint","a","method","data","requestConfig","url","axios","response","Error","useFetchData","useState","status","setData","getData","api","useEffect","timeId","setTimeout","clearTimeout","StyledTabs","styled","other","Tabs","classes","flexContainer","indicator","variant","TabIndicatorProps","children","centered","display","justifyContent","backgroundColor","maxWidth","width","flexDirection","alignItems","style","drawer","zIndex","icon","fontSize","useStyles","makeStyles","container","height","listItemIcon","color","linkCollapse","textTransform","link","textDecoration","menuIcon","mainDivider","subDivider","subscriberLinks","to","name","tabsValue","campaignLinks","StyledListItem","withStyles","root","ListItem","DrawerMenu","setTabsValue","location","useLocation","openDrawer","setOpenDrawer","openSubscribersLinks","setOpenSubscribersLinks","openCampaignsLinks","setOpenCampaignsLinks","Drawer","anchor","open","onClose","Grid","direction","className","item","List","button","onClick","ListItemIcon","ListItemText","primary","Divider","Collapse","in","timeout","unmountOnExit","map","selected","pathname","uniqueId","IconButton","mainNavigationLinks","theme","position","top","minHeight","breakpoints","down","padding","navLinksContainer","flex","logoContainer","flexGrow","logo","cursor","letterSpacing","marginRight","spacing","MainNavigation","useTheme","isSmallDevice","useMediaQuery","path","window","href","indexOf","AppBar","CssBaseline","Toolbar","onChange","e","newTabsValue","value","Tab","disableRipple","label","component","Link","commonStyles","borderRadius","activeLink","border","unactiveLink","StyledLink","isActive","exact","rest","resolvedLocation","useResolvedLocation","startsWith","styleGrid","margin","paddingRight","SubNavigation","dataLinks","Container","index","md","appBar","bottom","footer","marginBottom","textAlign","StyledFooter","Box","p","xs","Typography","target","box","marginTop","mainHeading","homeImg","HomePage","boxShadow","sm","gutterBottom","paragraph","order","justify","src","alt","underline","tableContainer","ContainerTable","subHeading","TableContainer","Paper","elevation","Table","defaultProps","tableHeaderCell","fontWeight","palette","getContrastText","dark","HeadTable","dataHeadTable","TableHead","TableRow","cell","TableCell","BodyTable","TableBody","statusColor","getFormattedData","date","moment","format","isEven","basicSubscriberInformation","Yup","required","matches","min","max","surname","email","allSubscriberInformation","profession","oneOf","salary","typeError","telephone","validationSubscriber","checked","shape","validationCampaign","title","description","sortDataAlphabetically","isName","x","fields","filter","Boolean","length","nestedPropertyRetriever","obj","toLowerCase","sort","b","valueA","valueB","capitalizeFirstLetter","string","firstLetter","charAt","toUpperCase","restString","slice","getLatestAddedItem","createdTime","marginLeft","pending","blocked","SubscriberTableRow","props","subscriber","setSelectedData","handleSubscriberDetails","setOpenConfirmPopup","setContentPopup","getStatusColor","id","Button","startIcon","text","colorButton","key","SubscribersList","subscribersData","scope","group","titleOne","titleTwo","titleThree","Loader","titleContainer","maxHeight","minWidth","buttonText","heading","contentText","up","paper","InfoPopup","openInfoPopup","setOpenInfoPopup","contentPopup","Dialog","DialogTitle","switch","DialogContent","dividers","dialog","span","ConfirmPopup","openConfirmPopup","handleRemoveItem","headingStyles","wordSpacing","StyledHeading","generalDataHeadTable","detailsDataHeadTableFirst","detailsDataHeadTableSecond","SubscribersPage","latestAddedSubscriber","SubscriberStatus","some","el","SubscribersStatusPage","useFetchDetailsById","itemData","setItemData","fetchData","delayGetData","SubscriberDetailsPage","useParams","subscriberData","isIdCorrect","undefined","find","borderColor","textError","paddingTop","SelectInputController","control","error","message","defaultValue","customId","FormControl","fullWidth","render","field","ref","Select","inputRef","MenuItem","inputLabelProps","sx","inputLabelClasses","shrink","StyledTextField","TextField","CustomTextInput","rows","multiline","InputLabelProps","styleTypography","propTypes","PropTypes","isRequired","object","bool","number","TextInputController","rules","StyledCheckbox","FormControlLabel","Checkbox","CustomButton","bgc","hover","StyledButton","ariaLabel","type","selectStatusData","typographyRequiredText","titlePopup","subscriberName","labelCheckbox","paddingLeft","checkbox","transform","AddSubscriberPage","getSubscribersData","isCheckboxChecked","setCheckboxState","useForm","resolver","yupResolver","handleSubmit","formState","errors","reset","isSubmitSuccessful","onSubmit","String","px","py","dataHeadEmailTable","typography","toolip","RowCampaign","campaign","handleEditDetailsCampaign","navigate","useNavigate","Tooltip","placement","TransitionComponent","Zoom","successIcon","CampaignsList","campaignsData","CampaignTableRow","CampaignsPage","latestAddedCampaign","backdropFilter","CampaignStatus","CampaignsStatusPage","FormCampaign","handleDraftData","handleSendData","process","REACT_APP_MAIL_TEMPLATE","REACT_APP_MAIL_USER","REACT_APP_MAIL_KEY","CampaignEditPage","getCampaignsData","setValue","campaignData","isEmailError","setEmailError","defaultValues","timeoutId","patchData","displayPopup","changeRoute","isCampaignChanged","campaignTitle","addTimeout","forEach","inputsData","emailjs","send","then","catch","err","console","log","postData","AddCampaignPage","styledTextPopup","subscribersLinksNavigation","campaignsLinksNavigation","NotFoundPage","loading","setLoading","intervalId","setInterval","clearInterval","AppContainer","selectedData","setSubscribersData","setCampaignsData","removeItemFromAirtable","routes","element","routing","useRoutes","nameGroup","selectedId","filteredGroup","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","h1","h2","h3","body2","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8b821926.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst request = async (endpoint, method = \"GET\", data = null) => {\n  const requestConfig = {\n    method,\n    url: `http://localhost:3001${endpoint}`,\n    data: method === \"POST\" || method === \"PATCH\" ? data : null,\n  };\n\n  const response = await axios(requestConfig);\n\n  if (!response) {\n    throw new Error(\"Something happened - no data\");\n  }\n\n  return response.data;\n};\n\nconst get = (endpoint) => request(endpoint);\n\nconst post = (endpoint, data) => request(endpoint, \"POST\", data);\n\nconst patch = (endpoint, data) => request(endpoint, \"PATCH\", data);\n\nconst _delete = (endpoint) => request(endpoint, \"DELETE\");\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  get,\n  post,\n  patch,\n  delete: _delete,\n};\n\n// const request = async (endpoint, method = \"GET\", data = null) => {\n//   const requestConfig = {\n//     method,\n//   };\n\n//   if (method === \"POST\" || method === \"PATCH\")\n//     requestConfig.body = JSON.stringify(data);\n\n//   const url = `http://localhost:3000${endpoint}`;\n\n//   const response = await fetch(url, requestConfig);\n\n//   const getData = await response.json();\n\n//   if (!getData) {\n//     throw new Error(\"Something happened - no data\");\n//   }\n\n//   return getData;\n// };\n\n// const get = (endpoint) => request(endpoint);\n\n// const post = (endpoint, data) => request(endpoint, \"POST\", data);\n\n// const patch = (endpoint, data) => request(endpoint, \"PATCH\", data);\n\n// const _delete = (endpoint) => request(endpoint, \"DELETE\");\n\n// // eslint-disable-next-line import/no-anonymous-default-export\n// export default {\n//   get,\n//   post,\n//   patch,\n//   delete: _delete,\n// };\n","import { useState, useEffect } from \"react\";\n\nimport api from \"./api\";\n\nexport function useFetchData(endpoint) {\n  const [data, setData] = useState({\n    status: \"loading\",\n    data: null,\n  });\n\n  const getData = async () => {\n    if (!endpoint) {\n      setData({ status: \"error\" });\n    } else {\n      try {\n        const data = await api.get(endpoint);\n\n        setData({\n          status: \"success\",\n          data,\n        });\n      } catch (error) {\n        setData({\n          status: \"error\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    const timeId = setTimeout(getData, 3_000);\n\n    return () => clearTimeout(timeId);\n  }, []);\n\n  return {\n    data,\n    setData,\n    getData,\n  };\n}\n","import PropTypes from \"prop-types\";\nimport { Tabs } from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\n\nconst StyledTabs = styled(({ ...other }) => {\n  return (\n    <Tabs\n      {...other}\n      classes={{\n        flexContainer: \"flexContainer\",\n        indicator: \"indicator\",\n      }}\n      variant=\"fullWidth\"\n      TabIndicatorProps={{ children: <span /> }}\n      centered\n    />\n  );\n})({\n  \"& .indicator\": {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\",\n    \"& > span\": {\n      maxWidth: 50,\n      width: \"100%\",\n      backgroundColor: \"orange\",\n    },\n  },\n  \"& .flexContainer\": {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\nStyledTabs.propTypes = {\n  other: PropTypes.object,\n};\n\nexport default StyledTabs;\n","import PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { uniqueId } from \"lodash\";\nimport {\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Collapse,\n  Grid,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuOpenIcon from \"@mui/icons-material/MenuOpen\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\nimport { AiFillMail } from \"react-icons/ai\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { SiStatuspage } from \"react-icons/si\";\nimport { MdPeopleAlt } from \"react-icons/md\";\nimport { IoIosPeople } from \"react-icons/io\";\nimport { MdAlternateEmail } from \"react-icons/md\";\nimport { MdOutlineMarkEmailRead } from \"react-icons/md\";\n\nconst style = {\n  drawer: { zIndex: 10 },\n  icon: { fontSize: 35 },\n};\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    height: \"100%\",\n    maxWidth: 230,\n    backgroundColor: \"#142f43\",\n  },\n  listItemIcon: { color: \"orange\", fontSize: 17 },\n  linkCollapse: {\n    color: \"orange\",\n    fontSize: 20,\n    textTransform: \"uppercase\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"#ffffff8c\",\n    fontSize: 20,\n  },\n  menuIcon: {\n    color: \"orange\",\n  },\n  mainDivider: { backgroundColor: \"#7a6032\" },\n  subDivider: { backgroundColor: \"#9c98988c\" },\n}));\n\nconst subscriberLinks = [\n  {\n    icon: <IoIosPeople />,\n    to: \"/subscribers\",\n    name: \"Subscribers\",\n    tabsValue: 0,\n  },\n  {\n    icon: <SiStatuspage />,\n    to: \"/subscribers/filter\",\n    name: \"Status\",\n    tabsValue: 0,\n  },\n  {\n    icon: <BsFillPersonPlusFill />,\n    to: \"/subscribers/add\",\n    name: \"Add New\",\n    tabsValue: 0,\n  },\n];\n\nconst campaignLinks = [\n  {\n    icon: <AiFillMail />,\n    to: \"/campaigns\",\n    name: \"Campaigns\",\n    tabsValue: 1,\n  },\n  {\n    icon: <SiStatuspage />,\n    to: \"/campaigns/filter\",\n    name: \"Status\",\n    tabsValue: 1,\n  },\n  {\n    icon: <MdOutlineMarkEmailRead />,\n    to: \"/campaigns/add\",\n    name: \"Add New\",\n    tabsValue: 1,\n  },\n];\n\nconst StyledListItem = withStyles({\n  root: {\n    \"&.Mui-selected\": {\n      backgroundColor: \"#102636\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"#102636\",\n    },\n  },\n})(ListItem);\n\nfunction DrawerMenu({ setTabsValue }) {\n  const classes = useStyles();\n  const location = useLocation();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [openSubscribersLinks, setOpenSubscribersLinks] = useState(false);\n  const [openCampaignsLinks, setOpenCampaignsLinks] = useState(false);\n\n  useEffect(() => {\n    if (!openDrawer) {\n      setOpenSubscribersLinks(false);\n      setOpenCampaignsLinks(false);\n    }\n  }, [openDrawer, openSubscribersLinks, openCampaignsLinks]);\n\n  const handleSubscribersClick = () => {\n    setOpenSubscribersLinks(!openSubscribersLinks);\n    setOpenCampaignsLinks(false);\n  };\n\n  const handleCampaignsClick = () => {\n    setOpenCampaignsLinks(!openCampaignsLinks);\n    setOpenSubscribersLinks(false);\n  };\n\n  return (\n    <>\n      <Drawer\n        anchor=\"right\"\n        style={style.drawer}\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"space-evenly\"\n          className={classes.container}\n        >\n          <Grid item>\n            <List>\n              <ListItem\n                button\n                onClick={handleSubscribersClick}\n                className={classes.linkCollapse}\n              >\n                <ListItemIcon className={classes.listItemIcon}>\n                  <MdPeopleAlt />\n                </ListItemIcon>\n                <ListItemText primary=\"Subscribers\" />\n                {openSubscribersLinks ? <IconExpandLess /> : <IconExpandMore />}\n              </ListItem>\n              <Divider className={classes.mainDivider} />\n\n              <Collapse in={openSubscribersLinks} timeout=\"auto\" unmountOnExit>\n                {subscriberLinks.map(({ icon, to, name, tabsValue }) => {\n                  return (\n                    <div key={`key-${uniqueId()}`}>\n                      <Link\n                        to={to}\n                        onClick={() => setTabsValue(tabsValue)}\n                        className={classes.link}\n                      >\n                        <StyledListItem\n                          button\n                          onClick={() => setOpenDrawer(false)}\n                          selected={to === location.pathname}\n                        >\n                          <ListItemIcon className={classes.listItemIcon}>\n                            {icon}\n                          </ListItemIcon>\n                          <ListItemText onClick={() => setTabsValue(tabsValue)}>\n                            {name}\n                          </ListItemText>\n                        </StyledListItem>\n                      </Link>\n                      <Divider className={classes.subDivider} />\n                    </div>\n                  );\n                })}\n              </Collapse>\n            </List>\n            <List>\n              <ListItem\n                button\n                onClick={handleCampaignsClick}\n                className={classes.linkCollapse}\n              >\n                <ListItemIcon className={classes.listItemIcon}>\n                  <MdAlternateEmail />\n                </ListItemIcon>\n                <ListItemText primary=\"Campaigns\" />\n                {openCampaignsLinks ? <IconExpandLess /> : <IconExpandMore />}\n              </ListItem>\n              <Divider className={classes.mainDivider} />\n\n              <Collapse in={openCampaignsLinks} timeout=\"auto\" unmountOnExit>\n                {campaignLinks.map(({ icon, to, name, tabsValue }) => {\n                  return (\n                    <div key={`key-${uniqueId()}`}>\n                      <Link\n                        to={to}\n                        onClick={() => setTabsValue(tabsValue)}\n                        className={classes.link}\n                      >\n                        <StyledListItem\n                          button\n                          onClick={() => setOpenDrawer(false)}\n                          selected={to === location.pathname}\n                        >\n                          <ListItemIcon className={classes.listItemIcon}>\n                            {icon}\n                          </ListItemIcon>\n                          <ListItemText onClick={() => setTabsValue(tabsValue)}>\n                            {name}\n                          </ListItemText>\n                        </StyledListItem>\n                      </Link>\n                      <Divider className={classes.subDivider} />\n                    </div>\n                  );\n                })}\n              </Collapse>\n            </List>\n          </Grid>\n          <Grid item>\n            <Link\n              to=\"/\"\n              onClick={() => setTabsValue(2)}\n              className={classes.link}\n            >\n              <StyledListItem\n                button\n                onClick={() => setOpenDrawer(false)}\n                selected={\"/\" === location.pathname}\n              >\n                <ListItemIcon className={classes.listItemIcon}>\n                  <AiFillHome />\n                </ListItemIcon>\n                <ListItemText onClick={() => setTabsValue(2)}>\n                  Home\n                </ListItemText>\n              </StyledListItem>\n            </Link>\n            <Divider className={classes.subDivider} />\n          </Grid>\n        </Grid>\n      </Drawer>\n      <IconButton\n        className={classes.menuIcon}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      >\n        {!openDrawer ? (\n          <MenuIcon style={style.icon} />\n        ) : (\n          <MenuOpenIcon style={style.icon} />\n        )}\n      </IconButton>\n    </>\n  );\n}\n\nDrawerMenu.propTypes = {\n  setTabsValue: PropTypes.func.isRequired,\n};\n\nexport default DrawerMenu;\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Tab,\n  Toolbar,\n  CssBaseline,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { GoMailRead } from \"react-icons/go\";\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\nimport { AiFillMail } from \"react-icons/ai\";\nimport { AiFillHome } from \"react-icons/ai\";\n\nimport { StyledTabs } from \"./StyledTabs\";\nimport { DrawerMenu } from \"./DrawerMenu\";\n\nconst mainNavigationLinks = [\n  {\n    icon: <BsFillPersonPlusFill style={{ color: \"orange\", fontSize: 17 }} />,\n    name: \"Subscribers\",\n    to: \"/subscribers\",\n  },\n  {\n    icon: <AiFillMail style={{ color: \"orange\", fontSize: 17 }} />,\n    name: \"Campaigns\",\n    to: \"/campaigns\",\n  },\n  {\n    icon: <AiFillHome style={{ color: \"orange\", fontSize: 17 }} />,\n    name: \"Home\",\n    to: \"/\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: \"fixed\",\n    top: 0,\n    backgroundColor: \"#142f43\",\n    minHeight: \"5vh\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: \"5vh\",\n      padding: \"10px 0\",\n    },\n  },\n  navLinksContainer: {\n    display: \"flex\",\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    padding: \"10px 0 20px 0\",\n  },\n  logoContainer: {\n    [theme.breakpoints.down(\"sm\")]: {\n      flexGrow: 1,\n    },\n  },\n  logo: {\n    fontSize: 30,\n    color: \"orange\",\n    cursor: \"pointer\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n    fontSize: 15,\n    letterSpacing: 2,\n    \"&:first-child\": {\n      marginRight: theme.spacing(4),\n    },\n  },\n}));\n\nfunction MainNavigation({ tabsValue, setTabsValue }) {\n  const theme = useTheme();\n  const classes = useStyles();\n  const isSmallDevice = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const location = useLocation();\n\n  const handleClickTab = (e, newTabsValue) => setTabsValue(newTabsValue);\n\n  useEffect(() => {\n    const path = location.pathname;\n    if (window.location.href.indexOf(\"subscribers\") > -1 && tabsValue !== 0)\n      setTabsValue(0);\n    else if (window.location.href.indexOf(\"campaigns\") > -1 && tabsValue !== 1)\n      setTabsValue(1);\n    else if (path === \"/\" && tabsValue !== 2) setTabsValue(2);\n  }, []);\n\n  return (\n    <AppBar className={classes.container} position=\"static\">\n      <CssBaseline />\n      <Toolbar>\n        <div className={classes.logoContainer}>\n          <Link to=\"/\">\n            <GoMailRead className={classes.logo} />\n          </Link>\n        </div>\n\n        {isSmallDevice ? (\n          <DrawerMenu setTabsValue={setTabsValue} />\n        ) : (\n          <div className={classes.navLinksContainer}>\n            <StyledTabs onChange={handleClickTab} value={tabsValue}>\n              {mainNavigationLinks.map(({ icon, name, to }) => (\n                <Tab\n                  key={name}\n                  icon={icon}\n                  disableRipple\n                  label={name}\n                  component={Link}\n                  to={to}\n                  className={classes.link}\n                />\n              ))}\n            </StyledTabs>\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nMainNavigation.propTypes = {\n  tabsValue: PropTypes.number.isRequired,\n  setTabsValue: PropTypes.func.isRequired,\n};\n\nexport default MainNavigation;\n","import PropTypes from \"prop-types\";\nimport { Link, useLocation, useResolvedLocation } from \"react-router-dom\";\n\nconst commonStyles = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  padding: \"8px 23px\",\n  width: 130,\n  fontSize: 12,\n  textDecoration: \"none\",\n  letterSpacing: 2,\n  borderRadius: 4,\n  textTransform: \"uppercase\",\n};\n\nconst activeLink = {\n  color: \"#003049\",\n  border: \"3px solid #003049\",\n  ...commonStyles,\n};\n\nconst unactiveLink = {\n  color: \"#fff\",\n  backgroundColor: \"#003049\",\n  border: \"3px solid #003049\",\n  ...commonStyles,\n};\n\nconst StyledLink = ({ to, exact, ...rest }) => {\n  const location = useLocation();\n  const resolvedLocation = useResolvedLocation(to);\n\n  let isActive;\n\n  if (exact) {\n    isActive = location.pathname === resolvedLocation.pathname;\n  } else {\n    isActive = location.pathname.startsWith(resolvedLocation.pathname);\n  }\n\n  return (\n    <Link style={isActive ? activeLink : unactiveLink} to={to} {...rest} />\n  );\n};\n\nStyledLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  exact: PropTypes.bool,\n  rest: PropTypes.object,\n};\n\nexport default StyledLink;\n","import PropTypes from \"prop-types\";\nimport { Outlet } from \"react-router-dom\";\nimport { Container, Grid } from \"@mui/material\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nimport StyledLink from \"./StyledLink\";\n\nconst styleGrid = { margin: \"10px auto\", maxWidth: 480, paddingRight: 20 };\n\nconst SubNavigation = ({ dataLinks }) => {\n  const theme = useTheme();\n  const isSmallDevice = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <>\n      {!isSmallDevice ? (\n        <Container>\n          <nav>\n            <Grid\n              container\n              style={styleGrid}\n              direction=\"row\"\n              justifyContent=\"space-evenly\"\n            >\n              {dataLinks.map(({ to, exact, name }, index) => (\n                <Grid item key={index} md={3}>\n                  <StyledLink to={to} exact={exact}>\n                    {name}\n                  </StyledLink>\n                </Grid>\n              ))}\n            </Grid>\n          </nav>\n\n          <div>\n            <Outlet />\n          </div>\n        </Container>\n      ) : (\n        <div>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nSubNavigation.propTypes = {\n  dataLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      to: PropTypes.string.isRequired,\n      exact: PropTypes.bool,\n      name: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default SubNavigation;\n","import PropTypes from \"prop-types\";\nimport { Container, Box, Grid } from \"@material-ui/core\";\nimport { AppBar, Typography } from \"@material-ui/core\";\nimport { Link } from \"@mui/material\";\nimport { BsGithub } from \"react-icons/bs\";\n\nconst style = {\n  appBar: {\n    position: \"absolute\",\n    bottom: 0,\n    backgroundColor: \"#142f43\",\n    color: \"#ffffff8c\",\n    minHeight: \"5vh\",\n  },\n  icon: {\n    fontSize: 25,\n    cursor: \"pointer\",\n    color: \"orange\",\n    zIndex: -1,\n  },\n  footer: { marginBottom: 180, zIndex: 1, textAlign: \"center\" },\n};\n\nconst StyledFooter = ({ label }) => (\n  <footer style={style.footer}>\n    <AppBar position=\"static\" color=\"primary\" style={style.appBar}>\n      <Container maxWidth=\"md\">\n        <Box p={3}>\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n          >\n            <Grid item xs={12}>\n              <Typography variant=\"body1\">{label}</Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Link href=\"https://github.com/SzymonRojek\" target=\"_blank\">\n                <BsGithub style={style.icon} />\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </AppBar>\n  </footer>\n);\n\nStyledFooter.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default StyledFooter;\n","export default __webpack_public_path__ + \"static/media/graphic.d362aaa6.svg\";","import { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"@mui/material\";\nimport { Container, Box, Grid, Typography } from \"@mui/material\";\nimport { SiAirtable } from \"react-icons/si\";\n\nimport homeImg from \"img/graphic.svg\";\n\nconst style = {\n  box: {\n    maxWidth: 1224,\n    margin: \"auto\",\n    color: \"#ffffff8c\",\n    backgroundColor: \"#142f43\",\n    borderRadius: 6,\n  },\n  link: {\n    color: \"orange\",\n    padding: \"0 10px\",\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  \"@media (min-width:960px)\": {\n    container: {\n      marginTop: 40,\n    },\n    mainHeading: {\n      padding: \"100px\",\n    },\n  },\n  \"@media (max-width:600px)\": {\n    container: {\n      marginTop: 40,\n    },\n    homeImg: {\n      maxWidth: 200,\n    },\n  },\n  mainHeading: {\n    color: \"orange\",\n  },\n  link: {\n    color: \"orange\",\n    padding: \"0 10px\",\n  },\n}));\n\nconst HomePage = () => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Box boxShadow={3} p={4} style={style.box}>\n        <Grid container direction=\"row\" spacing={4}>\n          <Grid item sm={12} xs={12} md={6}>\n            <Typography\n              variant=\"h1\"\n              gutterBottom\n              md={12}\n              className={classes.mainHeading}\n            >\n              Hello, there.\n            </Typography>\n          </Grid>\n          <Grid item sm={6} md={6}>\n            <Typography variant=\"h2\" paragraph>\n              This is the <strong>Email Campaign </strong>\n              application. You can write @mail to all your subscribers just by\n              one CLICK - easy peasy!\n            </Typography>\n          </Grid>\n          <Grid item sm={6} xs={12} md={6} order={{ md: 4 }}>\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <img src={homeImg} alt=\"campaign\" className={classes.homeImg} />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} md={6} order={{ md: 3 }}>\n            <Grid container spacing={3}>\n              <Grid item>\n                <Typography variant=\"h3\">\n                  The app is connected to the\n                  <span style={{ display: \"inline-block\" }}>\n                    <Link\n                      href=\"https://airtable.com/\"\n                      target=\"_blank\"\n                      underline=\"hover\"\n                      style={style.link}\n                    >\n                      <SiAirtable /> Airtable\n                    </Link>\n                  </span>\n                  base. Easily brings all information together - organize,\n                  connect and change them as needed.\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h3\">\n                  Airtable base will provide its own <strong>rest API </strong>\n                  to create, read, update, and delete any records.\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} order={{ md: 5 }}>\n            <Grid container spacing={3}>\n              <Grid item>\n                <Typography variant=\"body2\">\n                  Add new subscriber, wait for an admin confirmation to get an\n                  active status and get more their details. Finally create an\n                  email campaign and send it to all your active subscribers just\n                  by one <strong>simple click</strong>!\n                </Typography>\n              </Grid>\n\n              <Grid item>\n                <Typography variant=\"body2\">\n                  If you would like to read the detailed description of the\n                  application or just to get more information about used\n                  technologies, please check out the\n                  <Link\n                    href=\"https://github.com/SzymonRojek/email-campaign-react-airtable\"\n                    target=\"_blank\"\n                    underline=\"hover\"\n                    style={style.link}\n                  >\n                    ReadMe\n                  </Link>\n                  file of this project.\n                </Typography>\n              </Grid>\n\n              <Grid item>\n                <Typography variant=\"body2\">Thanks! 🙏</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Table, TableContainer, Paper } from \"@material-ui/core\";\n\nconst style = {\n  textAlign: \"left\",\n  marginBottom: -20,\n  color: \"#142F43\",\n  letterSpacing: 2,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"50px auto\",\n  },\n}));\n\nconst ContainerTable = ({ subHeading, children }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <header>\n        <h3 style={style}>{subHeading}</h3>\n      </header>\n      <TableContainer\n        component={Paper}\n        className={classes.tableContainer}\n        elevation={4}\n      >\n        <Table aria-label=\"subscribers table\">{children}</Table>\n      </TableContainer>\n    </>\n  );\n};\n\nContainerTable.propTypes = {\n  children: PropTypes.array.isRequired,\n  subHeading: PropTypes.string,\n};\n\nContainerTable.defaultProps = { subHeading: \"\" };\n\nexport default ContainerTable;\n","import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TableCell, TableHead, TableRow } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeaderCell: {\n    fontWeight: \"bold\",\n    backgroundColor: \"#142f43\",\n    color: theme.palette.getContrastText(theme.palette.primary.dark),\n  },\n}));\n\nconst HeadTable = ({ dataHeadTable }) => {\n  const classes = useStyles();\n\n  return (\n    <TableHead>\n      <TableRow>\n        {dataHeadTable.map((cell, index) => (\n          <TableCell key={`i-${index}`} className={classes.tableHeaderCell}>\n            {cell}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nHeadTable.propTypes = {\n  dataHeadTable: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default HeadTable;\n","import PropTypes from \"prop-types\";\nimport { TableBody } from \"@material-ui/core\";\n\nconst BodyTable = ({ children }) => <TableBody>{children}</TableBody>;\n\nBodyTable.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default BodyTable;\n","const statusColor = (data) =>\n  ((data === \"active\" || data === \"sent\") && \"green\") ||\n  ((data === \"pending\" || data === \"draft\") && \"orange\") ||\n  (data && \"crimson\");\n\nexport default statusColor;\n","import moment from \"moment\";\n\nconst getFormattedData = (date) => moment(date).format(\"YYYY/MM/DD\");\n\nexport default getFormattedData;\n","const isEven = (index, color) => (index % 2 ? color : \"\");\n\nexport default isEven;\n","import * as Yup from \"yup\";\n\nconst basicSubscriberInformation = {\n  name: Yup.string()\n    .required(\"name is required\")\n    .matches(/^[aA-zZ\\s]+$/, \"only letters are required\")\n    .min(3, \"must be at least 6 characters\")\n    .max(10, \"must not exceed 10 characters\"),\n  surname: Yup.string()\n    .required(\"surname is required\")\n    .matches(/^[aA-zZ\\s]+$/, \"only letters are required\")\n    .min(3, \"must be at least 3 characters\")\n    .max(10, \"must not exceed 10 characters\"),\n  email: Yup.string()\n    .required(\"email is required\")\n    .matches(/^([^.@]+)(\\.[^.@]+)*@([^.@]+\\.)+([^.@]+)$/, \"email is invalid\"),\n};\n\nconst status = [\"pending\", \"blocked\", \"active\"];\n\nconst allSubscriberInformation = {\n  name: Yup.string()\n    .required(\"name is required\")\n    .matches(/^[aA-zZ\\s]+$/, \"only letters are required\")\n    .min(3, \"must be at least 6 characters\")\n    .max(10, \"must not exceed 10 characters\"),\n  surname: Yup.string()\n    .required(\"surname is required\")\n    .matches(/^[aA-zZ\\s]+$/, \"only letters are required\")\n    .min(3, \"must be at least 3 characters\")\n    .max(10, \"must not exceed 10 characters\"),\n  profession: Yup.string()\n    .required(\"profession is required\")\n    .matches(/^[aA-zZ\\s]+$/, \"only letters are required\")\n    .min(3, \"must be at least 3 characters\")\n    .max(10, \"must not exceed 10 characters\"),\n  status: Yup.string().required(\"status is required\").oneOf(status),\n  email: Yup.string()\n    .required(\"email is required\")\n    .matches(/^([^.@]+)(\\.[^.@]+)*@([^.@]+\\.)+([^.@]+)$/, \"email is invalid\"),\n  salary: Yup.number()\n    .required(\"salary is required\")\n    .typeError(\"must specify a number\")\n    .min(3, \"must be at least 3 numbers\"),\n  telephone: Yup.string()\n    .matches(\n      /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\n      \"phone is invalid\"\n    )\n    .required(\"phone is required\"),\n};\n\nconst validationSubscriber = (checked) =>\n  checked\n    ? Yup.object().shape(allSubscriberInformation)\n    : Yup.object().shape(basicSubscriberInformation);\n\nexport default validationSubscriber;\n","import * as Yup from \"yup\";\n\nconst validationCampaign = Yup.object().shape({\n  title: Yup.string()\n    .required(\"title is required\")\n    .min(3, \"must be at least 3 characters\")\n    .max(20, \"must not exceed 20 characters\"),\n  description: Yup.string()\n    .required(\"description is required\")\n    .min(3, \"must be at least 3 characters\")\n    .max(60, \"must not exceed 60 characters\"),\n});\n\nexport default validationCampaign;\n","const sortDataAlphabetically = (data) => {\n  if (!data) return;\n  const isName = data.map((x) => x.fields.name).filter(Boolean).length > 0;\n\n  const nestedPropertyRetriever = (obj) =>\n    isName ? obj.fields.name.toLowerCase() : obj.fields.title.toLowerCase();\n\n  data.sort((a, b) => {\n    const valueA = nestedPropertyRetriever(a);\n    const valueB = nestedPropertyRetriever(b);\n\n    return valueA < valueB ? -1 : valueA > valueB ? 1 : 0;\n  });\n};\n\nexport default sortDataAlphabetically;\n","const capitalizeFirstLetter = (string) => {\n  const firstLetter = string.charAt(0).toUpperCase();\n  const restString = string.slice(1).toLowerCase();\n\n  return `${firstLetter}${restString}`;\n};\n\nexport default capitalizeFirstLetter;\n","const getLatestAddedItem = (data) => {\n  if (!data) return;\n\n  return [...data]\n    .sort((a, b) => (a.createdTime > b.createdTime ? 1 : -1))\n    .slice(-1);\n};\n\nexport default getLatestAddedItem;\n","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport DetailsIcon from \"@mui/icons-material/Details\";\nimport { TableCell, TableRow, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  isEven,\n  getFormattedData,\n  getStatusColor,\n  capitalizeFirstLetter,\n} from \"helpers\";\n\nconst style = {\n  paragraph: {\n    padding: \"8px 20px\",\n    letterSpacing: 2,\n    textTransform: \"uppercase\",\n    fontSize: 11,\n    width: 80,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  icon: { marginLeft: 10, color: \"white\" },\n  pending: { color: \"orange\" },\n  blocked: { color: \"#d32f2f\" },\n};\nconst useStyles = makeStyles((theme) => ({\n  status: {\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    color: \"white\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 8,\n    padding: \"3px 10px\",\n    display: \"inline-block\",\n  },\n}));\n\nconst SubscriberTableRow = (props) => {\n  const {\n    subscriber,\n    index,\n    children,\n    setSelectedData,\n    handleSubscriberDetails,\n    setOpenConfirmPopup,\n    setContentPopup,\n  } = props;\n\n  const classes = useStyles();\n  const location = useLocation();\n\n  const setTextPopupByStatus = () =>\n    subscriber.fields.status === \"pending\"\n      ? setContentPopup({\n          title: \"Please wait...\",\n          text: (\n            <>\n              {capitalizeFirstLetter(subscriber.fields.name)}'s status is\n              <span style={style.pending}>\n                <strong> pending </strong>\n              </span>\n              at the moment - subscription has to be confirmed by an admin 🙂\n            </>\n          ),\n          colorButton: \"error\",\n        })\n      : subscriber.fields.status === \"blocked\"\n      ? setContentPopup({\n          title: \"Unfortunately...\",\n          text: (\n            <>\n              {capitalizeFirstLetter(subscriber.fields.name)}'s status is\n              <span style={style.blocked}>\n                <strong> blocked </strong>\n              </span>\n              - can not get an access to more details 🙁\n            </>\n          ),\n          colorButton: \"error\",\n        })\n      : {};\n\n  return (\n    <TableRow\n      key={`${subscriber.id}`}\n      style={{ backgroundColor: isEven(index, \"#F5F5F5\") }}\n    >\n      {children}\n      <TableCell>\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Typography color=\"textSecondary\" variant=\"subtitle1\">\n              {capitalizeFirstLetter(subscriber.fields.name)}\n            </Typography>\n          </Grid>\n        </Grid>\n      </TableCell>\n      <TableCell>\n        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n          {capitalizeFirstLetter(subscriber.fields.surname)}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n          {subscriber.fields.profession}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <span>\n          <Typography\n            key={index}\n            className={classes.status}\n            style={{\n              backgroundColor: getStatusColor(subscriber.fields.status),\n              ...style.paragraph,\n            }}\n          >\n            {subscriber.fields.status}\n          </Typography>\n        </span>\n      </TableCell>\n      <TableCell>\n        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n          {getFormattedData(subscriber.createdTime)}\n        </Typography>\n      </TableCell>\n      {location.pathname !== `/subscribers/details/${subscriber.id}` && (\n        <>\n          <TableCell>\n            <Button\n              aria-label=\"subscriber-details\"\n              color=\"success\"\n              variant=\"contained\"\n              startIcon={<DetailsIcon style={style.icon} />}\n              onClick={() => {\n                setSelectedData(subscriber);\n                handleSubscriberDetails(subscriber);\n                setTextPopupByStatus();\n              }}\n            />\n          </TableCell>\n          <TableCell>\n            <Button\n              key={location.key}\n              aria-label=\"delete\"\n              color=\"error\"\n              variant=\"contained\"\n              startIcon={<DeleteIcon style={style.icon} />}\n              onClick={() => {\n                setOpenConfirmPopup(true);\n                setSelectedData(subscriber);\n                setContentPopup({\n                  title: capitalizeFirstLetter(subscriber.fields.name),\n                });\n              }}\n            />\n          </TableCell>\n        </>\n      )}\n    </TableRow>\n  );\n};\n\nSubscriberTableRow.propTypes = {\n  subscriber: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    group: PropTypes.string,\n    createdTime: PropTypes.string.isRequired,\n    fields: PropTypes.shape({\n      status: PropTypes.string,\n      name: PropTypes.string,\n      surname: PropTypes.string,\n      profession: PropTypes.string,\n      email: PropTypes.string,\n      salary: PropTypes.string,\n      telephone: PropTypes.string,\n    }).isRequired,\n  }),\n  index: PropTypes.number.isRequired,\n  children: PropTypes.any,\n  setSelectedData: PropTypes.func,\n  handleSubscriberDetails: PropTypes.func,\n  setOpenConfirmPopup: PropTypes.func,\n  setContentPopup: PropTypes.func,\n};\n\nexport default SubscriberTableRow;\n","import PropTypes from \"prop-types\";\nimport { TableCell } from \"@material-ui/core\";\n\nimport { ContainerTable, HeadTable, BodyTable } from \"../Table\";\nimport { SubscriberTableRow } from \"../SubscriberTableRow\";\n\nconst SubscribersList = ({\n  subHeading,\n  dataHeadTable,\n  subscribersData,\n  handleSubscriberDetails,\n  setSelectedData,\n  setContentPopup,\n  setOpenConfirmPopup,\n}) => (\n  <ContainerTable subHeading={subHeading}>\n    <HeadTable dataHeadTable={dataHeadTable} />\n    <BodyTable>\n      {subscribersData &&\n        subscribersData.map((subscriber, index) => (\n          <SubscriberTableRow\n            children={\n              <TableCell component=\"th\" scope=\"row\">\n                {++index}.\n              </TableCell>\n            }\n            key={`id-${subscriber.id}`}\n            subscriber={{ ...subscriber, group: \"subscribers\" }}\n            index={index}\n            setSelectedData={setSelectedData}\n            handleSubscriberDetails={handleSubscriberDetails}\n            setContentPopup={setContentPopup}\n            setOpenConfirmPopup={setOpenConfirmPopup}\n          />\n        ))}\n    </BodyTable>\n  </ContainerTable>\n);\n\nSubscribersList.propTypes = {\n  subHeading: PropTypes.string.isRequired,\n  dataHeadTable: PropTypes.array.isRequired,\n  subscribersData: PropTypes.array.isRequired,\n  handleSubscriberDetails: PropTypes.func.isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n};\n\nexport default SubscribersList;\n","import PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst Error = ({ titleOne, titleTwo, titleThree }) => (\n  <div className=\"error-container\">\n    <p className=\"error-text error-mainText\">{titleOne}</p>\n    <p className=\"error-text error-subText\">{titleTwo}</p>\n    <p className=\"error-text error-subText\">{titleThree}</p>\n  </div>\n);\n\nError.propTypes = {\n  titleOne: PropTypes.string.isRequired,\n  titleTwo: PropTypes.string.isRequired,\n  titleThree: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst Loader = ({ title }) => (\n  <div className=\"loader-container\">\n    <div className=\"load\"></div>\n\n    <div className=\"text-container\">\n      <p className=\"loader-text\">{title} Data</p>\n\n      <div className=\"dot-container\">\n        <p className=\"loader-text\">loading</p>\n        <div className=\"dot-flashing\"></div>\n      </div>\n    </div>\n  </div>\n);\n\nLoader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Loader;\n","import PropTypes from \"prop-types\";\nimport { Button, Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst style = {\n  titleContainer: { display: \"flex\" },\n  title: { flexGrow: 1 },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  [theme.breakpoints.down(\"xs\")]: {\n    button: {\n      maxWidth: \"28px\",\n      maxHeight: \"28px\",\n      minWidth: \"28px\",\n      minHeight: \"28px\",\n    },\n    buttonText: {\n      fontSize: 12,\n      color: \"white !important\",\n    },\n    heading: { fontSize: 18 },\n    contentText: { fontSize: 15 },\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    button: {\n      height: 35,\n      color: \"white !important\",\n    },\n\n    heading: { fontSize: 25 },\n    contentText: { fontSize: 20 },\n    paper: {\n      maxWidth: 500,\n    },\n  },\n}));\n\nconst InfoPopup = ({ openInfoPopup, setOpenInfoPopup, contentPopup }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog open={openInfoPopup} classes={{ paper: classes.paper }}>\n      <DialogTitle>\n        <div style={style.titleContainer}>\n          <p style={style.title} className={classes.heading}>\n            {contentPopup.title}\n          </p>\n          <Button\n            aria-label=\"close\"\n            className={classes.button}\n            variant=\"contained\"\n            color={contentPopup.colorButton}\n            onClick={() => {\n              setOpenInfoPopup(false);\n              if (contentPopup.switch) return contentPopup.switch;\n            }}\n          >\n            <span className={classes.buttonText}>close</span>\n          </Button>\n        </div>\n      </DialogTitle>\n      <DialogContent dividers>\n        <p className={classes.contentText}>{contentPopup.text}</p>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nInfoPopup.propTypes = {\n  openInfoPopup: PropTypes.bool.isRequired,\n  setOpenInfoPopup: PropTypes.func.isRequired,\n  contentPopup: PropTypes.object.isRequired,\n};\n\nexport default InfoPopup;\n","import PropTypes from \"prop-types\";\nimport { Dialog, DialogContent, DialogTitle, Typography } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\n\nconst style = {\n  dialog: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    padding: \"30px 0 25px 0\",\n  },\n  span: { color: \"crimson\" },\n  button: { color: \"white\" },\n};\n\nconst ConfirmPopup = ({\n  openConfirmPopup,\n  setOpenConfirmPopup,\n  handleRemoveItem,\n  contentPopup,\n}) => (\n  <Dialog open={openConfirmPopup} maxWidth=\"sm\">\n    <DialogTitle>\n      <div>\n        <Typography variant=\"h6\" p={2}>\n          Are you sure you want to remove\n          <span style={style.span}> {contentPopup.title}</span> ?\n        </Typography>\n      </div>\n    </DialogTitle>\n    <DialogContent dividers style={style.dialog}>\n      <Button\n        variant=\"contained\"\n        color=\"error\"\n        onClick={() => handleRemoveItem()}\n      >\n        YES\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"success\"\n        style={style.button}\n        onClick={() => setOpenConfirmPopup(false)}\n      >\n        NO\n      </Button>\n    </DialogContent>\n  </Dialog>\n);\n\nConfirmPopup.propTypes = {\n  openConfirmPopup: PropTypes.bool.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n  handleRemoveItem: PropTypes.func.isRequired,\n  contentPopup: PropTypes.object.isRequired,\n};\n\nexport default ConfirmPopup;\n","import PropTypes from \"prop-types\";\n\nconst headingStyles = {\n  textAlign: \"center\",\n  marginTop: 60,\n  marginBottom: 40,\n  color: \"#142F43\",\n  letterSpacing: 2,\n  wordSpacing: 15,\n};\n\nconst StyledHeading = ({ label }) => <h1 style={headingStyles}>{label}</h1>;\n\nStyledHeading.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default StyledHeading;\n","export const generalDataHeadTable = [\n  \"No\",\n  \"Name\",\n  \"Surname\",\n  \"Profession\",\n  \"Status\",\n  \"Created\",\n  \"Details\",\n  \"Delete\",\n];\n\nexport const detailsDataHeadTableFirst = [\n  \"Name\",\n  \"Surname\",\n  \"Profession\",\n  \"Status\",\n  \"Created\",\n];\n\nexport const detailsDataHeadTableSecond = [\"Email\", \"Salary\", \"Telephone\"];\n","import PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\n\nimport { SubscribersList } from \"components/SubscribersList\";\nimport { Loader, Error } from \"components/DisplayMessage\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { generalDataHeadTable } from \"data/dataHeadTable\";\nimport { getLatestAddedItem, sortDataAlphabetically } from \"helpers\";\n\nconst SubscribersPage = (props) => {\n  const {\n    subscribersData,\n    setSelectedData,\n    handleSubscriberDetails,\n    setOpenConfirmPopup,\n    setContentPopup,\n  } = props;\n\n  sortDataAlphabetically(subscribersData.data);\n\n  const latestAddedSubscriber = getLatestAddedItem(subscribersData.data);\n  return (\n    <>\n      {subscribersData.status === \"loading\" ? (\n        <Loader title=\"Subscribers\" />\n      ) : subscribersData.status === \"error\" ? (\n        <Error\n          titleOne=\"ERROR MESSAGE\"\n          titleTwo=\"Check access to the data from airtable base.\"\n          titleThree=\"Also, please check your internet connection.\"\n        />\n      ) : (\n        <Container>\n          {subscribersData.status === \"success\" &&\n          !subscribersData.data.length ? (\n            <Error\n              titleOne=\"There are not subscribers added yet.\"\n              titleTwo=\"Please add a new subscriber.\"\n              titleThree=\"🙂\"\n            />\n          ) : (\n            <>\n              <StyledHeading label=\"Subscribers:\" />\n\n              <SubscribersList\n                subHeading=\"List:\"\n                dataHeadTable={generalDataHeadTable}\n                subscribersData={subscribersData.data}\n                setSelectedData={setSelectedData}\n                handleSubscriberDetails={handleSubscriberDetails}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n            </>\n          )}\n\n          {subscribersData.data.length > 1 ? (\n            <SubscribersList\n              subHeading=\"Latest added Subscriber:\"\n              dataHeadTable={generalDataHeadTable}\n              subscribersData={latestAddedSubscriber}\n              setSelectedData={setSelectedData}\n              handleSubscriberDetails={handleSubscriberDetails}\n              setContentPopup={setContentPopup}\n              setOpenConfirmPopup={setOpenConfirmPopup}\n            />\n          ) : (\n            \"\"\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nSubscribersPage.propTypes = {\n  subscribersData: PropTypes.shape({\n    status: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.object),\n    latestAddedItem: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  handleSubscriberDetails: PropTypes.func.isRequired,\n  setOpenInfoPopup: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default SubscribersPage;\n","import PropTypes from \"prop-types\";\nimport { TableCell } from \"@material-ui/core\";\n\nimport { ContainerTable, HeadTable, BodyTable } from \"../Table\";\nimport { SubscriberTableRow } from \"../SubscriberTableRow\";\n\nconst SubscriberStatus = (props) => {\n  const {\n    subHeading,\n    generalDataHeadTable,\n    subscribersData,\n    status,\n    handleSubscriberDetails,\n    setSelectedData,\n    setContentPopup,\n    setOpenConfirmPopup,\n  } = props;\n\n  return subscribersData &&\n    subscribersData.some((el) => el.fields.status === status) ? (\n    <ContainerTable subHeading={subHeading}>\n      <HeadTable dataHeadTable={generalDataHeadTable} />\n\n      <BodyTable>\n        {subscribersData &&\n          subscribersData\n            .filter((subscriber) => subscriber.fields.status === status)\n            .map((subscriber, index) => (\n              <SubscriberTableRow\n                children={\n                  <TableCell component=\"th\" scope=\"row\">\n                    {++index}.\n                  </TableCell>\n                }\n                key={`id-${subscriber.id}`}\n                subscriber={{ ...subscriber, group: \"subscribers\" }}\n                index={index}\n                setSelectedData={setSelectedData}\n                handleSubscriberDetails={handleSubscriberDetails}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n            ))}\n      </BodyTable>\n    </ContainerTable>\n  ) : (\n    \"\"\n  );\n};\n\nSubscriberStatus.propTypes = {\n  subHeading: PropTypes.string.isRequired,\n  generalDataHeadTable: PropTypes.array.isRequired,\n  subscribersData: PropTypes.array.isRequired,\n  status: PropTypes.string.isRequired,\n  handleSubscriberDetails: PropTypes.func.isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n};\n\nexport default SubscriberStatus;\n","import PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\n\nimport { SubscriberStatus } from \"components/SubscriberStatus\";\nimport { Loader, Error } from \"components/DisplayMessage\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { generalDataHeadTable } from \"data/dataHeadTable\";\n\nconst SubscribersStatusPage = (props) => {\n  const {\n    subscribersData,\n    handleSubscriberDetails,\n    setOpenConfirmPopup,\n    setSelectedData,\n    setContentPopup,\n  } = props;\n\n  return (\n    <>\n      {subscribersData.status === \"loading\" ? (\n        <Loader title=\"Subscribers\" />\n      ) : subscribersData.status === \"error\" ? (\n        <Error\n          titleOne=\"ERROR MESSAGE\"\n          titleTwo=\"Probably there is no an access to the internet.\"\n          titleThree=\"Contact with your internet provider.\"\n        />\n      ) : (\n        <Container>\n          {subscribersData.status === \"success\" &&\n          !subscribersData.data.length ? (\n            <Error\n              titleOne=\"There are not subscribers added yet.\"\n              titleTwo=\"Please add a new subscriber.\"\n              titleThree=\"🙂\"\n            />\n          ) : (\n            <>\n              <StyledHeading label=\"Subscribers status:\" />\n\n              <SubscriberStatus\n                subHeading=\"Active:\"\n                generalDataHeadTable={generalDataHeadTable}\n                subscribersData={subscribersData.data}\n                status=\"active\"\n                setSelectedData={setSelectedData}\n                handleSubscriberDetails={handleSubscriberDetails}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n\n              <SubscriberStatus\n                subHeading=\"Pending:\"\n                generalDataHeadTable={generalDataHeadTable}\n                subscribersData={subscribersData.data}\n                status=\"pending\"\n                setSelectedData={setSelectedData}\n                handleSubscriberDetails={handleSubscriberDetails}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n\n              <SubscriberStatus\n                subHeading=\"Blocked:\"\n                generalDataHeadTable={generalDataHeadTable}\n                subscribersData={subscribersData.data}\n                status=\"blocked\"\n                setSelectedData={setSelectedData}\n                handleSubscriberDetails={handleSubscriberDetails}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n            </>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nSubscribersStatusPage.propTypes = {\n  subscribersData: PropTypes.shape({\n    status: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.object),\n    latestAddedItem: PropTypes.arrayOf(PropTypes.object),\n  }),\n  handleSubscriberDetails: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default SubscribersStatusPage;\n","import { useEffect, useState } from \"react\";\n\nimport api from \"./api\";\n\nexport const useFetchDetailsById = (endpoint) => {\n  const [itemData, setItemData] = useState({\n    status: \"loading\",\n    data: null,\n  });\n\n  const fetchData = async () => {\n    try {\n      const data = await api.get(endpoint);\n\n      setItemData({ status: \"success\", data });\n    } catch (error) {\n      setItemData({ status: \"error\" });\n    }\n  };\n\n  useEffect(() => {\n    const delayGetData = setTimeout(fetchData, 2_000);\n\n    return () => clearTimeout(delayGetData);\n  }, []);\n\n  return { itemData, setItemData };\n};\n","import PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\n\nimport { ContainerTable, HeadTable } from \"components/Table\";\nimport { SubscriberTableRow } from \"components/SubscriberTableRow\";\nimport {\n  detailsDataHeadTableFirst,\n  detailsDataHeadTableSecond,\n} from \"data/dataHeadTable\";\nimport { Loader, Error } from \"components/DisplayMessage\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { useFetchDetailsById } from \"useFetchDetailsById\";\n\nconst SubscriberDetailsPage = ({ subscribersData }) => {\n  const { id } = useParams();\n  const endpoint = `/subscribers/${id}`;\n\n  const { itemData: subscriberData } = useFetchDetailsById(endpoint);\n\n  // check if Campaign's id is available, otherwise return Error\n  let isIdCorrect = null;\n\n  if (id !== undefined && subscribersData.data !== null) {\n    isIdCorrect = Boolean(subscribersData.data.find((item) => item.id === id));\n  }\n\n  if (isIdCorrect === false || subscriberData.status === \"error\") {\n    return (\n      <Error\n        titleOne=\"Unfortunately, Subscriber does not exist.\"\n        titleTwo=\"Check the url address.\"\n        titleThree=\"Back to Subscribers.\"\n      />\n    );\n  }\n\n  return (\n    <>\n      {subscriberData.status === \"loading\" ? (\n        <Loader title=\"Subscriber\" />\n      ) : (\n        <Container>\n          <>\n            <StyledHeading label=\"Subscribers Details:\" />\n\n            <ContainerTable subHeading=\"General:\">\n              <HeadTable dataHeadTable={detailsDataHeadTableFirst} />\n\n              <TableBody>\n                {subscriberData &&\n                  [subscriberData.data].map((subscriber, index) => (\n                    <SubscriberTableRow\n                      key={`id-${subscriber.id}`}\n                      index={index}\n                      subscriber={subscriber}\n                    />\n                  ))}\n              </TableBody>\n            </ContainerTable>\n\n            <ContainerTable subHeading=\"Details:\">\n              <HeadTable dataHeadTable={detailsDataHeadTableSecond} />\n\n              <TableBody>\n                {subscriberData &&\n                  [subscriberData.data].map((subscriber, index) => (\n                    <TableRow key={`i-${index}`}>\n                      <TableCell>\n                        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n                          {subscriber.fields?.email}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n                          {subscriber.fields?.salary}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n                          {subscriber.fields?.telephone}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </ContainerTable>\n          </>\n        </Container>\n      )}\n    </>\n  );\n};\n\nSubscriberDetailsPage.propTypes = {\n  subscribersData: PropTypes.shape({\n    status: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.object),\n  }),\n};\n\nexport default SubscriberDetailsPage;\n","import PropTypes from \"prop-types\";\nimport { Controller } from \"react-hook-form\";\n\nimport { FormControl, Select, MenuItem, Divider } from \"@mui/material\";\nimport { Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"& .MuiOutlinedInput-input\": {\n      color: \"white\",\n    },\n    \"& .MuiInputLabel-root\": {\n      color: \"white\",\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\",\n    },\n    \"& .MuiSvgIcon-root\": {\n      color: \"white\",\n    },\n    \"&:hover .MuiOutlinedInput-input\": {\n      color: \"white\",\n    },\n    \"&:hover .MuiInputLabel-root\": {\n      color: \"white\",\n    },\n    \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"white\",\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n      color: \"white\",\n    },\n    \"& .MuiInputLabel-root.Mui-focused\": {\n      color: \"white\",\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      borderColor: \"#ffa500\",\n    },\n  },\n});\n\nconst style = {\n  textError: { color: \"crimson\", paddingTop: 10 },\n};\n\nconst SelectInputController = ({ ...props }) => {\n  const { control, name, error, message, defaultValue, data } = props;\n  const classes = useStyles();\n  const customId = `${name}-id`;\n\n  return (\n    <FormControl fullWidth className={classes.root}>\n      <Controller\n        render={({ field: { ref, ...field } }) => (\n          <Select {...field} inputRef={ref} id={customId} error={error}>\n            {data.map(({ value, label }) => (\n              <MenuItem key={`key-${label}`} value={value}>\n                {label}\n              </MenuItem>\n            ))}\n          </Select>\n        )}\n        control={control}\n        name={name}\n        defaultValue={defaultValue}\n      />\n\n      <Typography variant=\"inherit\" style={style.textError}>\n        {message}\n      </Typography>\n    </FormControl>\n  );\n};\n\nSelectInputController.propTypes = {\n  control: PropTypes.object.isRequired,\n  error: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default SelectInputController;\n","import PropTypes from \"prop-types\";\nimport { TextField } from \"@mui/material\";\nimport { Grid } from \"@material-ui/core\";\nimport { inputLabelClasses } from \"@mui/material/InputLabel\";\nimport { withStyles } from \"@mui/styles\";\n\nconst inputLabelProps = {\n  sx: {\n    // set the color of the label when not shrinked\n    color: \"#fff\",\n    [`&.${inputLabelClasses.shrink}`]: {\n      // set the color of the label when shrinked (usually when the TextField is focused)\n      color: \"#ffa500 !important\",\n      letterSpacing: 1,\n    },\n  },\n};\n\nconst StyledTextField = withStyles({\n  root: {\n    \"& .MuiInputBase-root\": {\n      color: \"white\",\n    },\n    \"& label.Mui-focused\": {\n      color: \"#fff\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#fff\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#fff\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#ffa500\",\n      },\n    },\n  },\n})(TextField);\n\nconst CustomTextInput = ({ name, error, value, onChange, rows, multiline }) => (\n  <Grid item xs={12}>\n    <StyledTextField\n      variant=\"outlined\"\n      id={name}\n      name={name}\n      label={name}\n      value={value}\n      error={error}\n      onChange={onChange}\n      required\n      fullWidth\n      margin=\"dense\"\n      rows={rows}\n      multiline={multiline}\n      InputLabelProps={inputLabelProps}\n    />\n  </Grid>\n);\n\nCustomTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  errors: PropTypes.object,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  rows: PropTypes.number,\n  multiline: PropTypes.bool,\n};\n\nCustomTextInput.defaultProps = { rows: 5 };\n\nexport default CustomTextInput;\n","import PropTypes from \"prop-types\";\nimport { Controller } from \"react-hook-form\";\nimport { Typography } from \"@mui/material\";\n\nimport CustomTextInput from \"./CustomTextInput\";\n\nconst styleTypography = { color: \"crimson\", paddingTop: 4 };\n\nconst TextInputController = ({\n  name,\n  control,\n  error,\n  message,\n  rows,\n  multiline,\n}) => (\n  <>\n    <Controller\n      name={name}\n      control={control}\n      defaultValue=\"\"\n      rules={{ required: true }}\n      render={({ field: { ref, ...field } }) => (\n        <CustomTextInput\n          {...field}\n          inputRef={ref}\n          error={error}\n          rows={rows}\n          multiline={multiline}\n        />\n      )}\n    />\n\n    <Typography variant=\"inherit\" style={styleTypography}>\n      {message}\n    </Typography>\n  </>\n);\n\nCustomTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  control: PropTypes.object,\n  error: PropTypes.bool.isRequired,\n  message: PropTypes.string,\n  rows: PropTypes.number.isRequired,\n  multiline: PropTypes.bool,\n};\n\nCustomTextInput.defaultProps = { rows: 5 };\n\nexport default TextInputController;\n","import { FormControlLabel, Checkbox } from \"@mui/material\";\n\nconst StyledCheckbox = ({ sx, style, label, onChange, defaultValue }) => (\n  <FormControlLabel\n    control={\n      <Checkbox sx={sx} defaultValue={defaultValue} onChange={onChange} />\n    }\n    label={<span style={style}>{label}</span>}\n  />\n);\n\nexport default StyledCheckbox;\n","import PropTypes from \"prop-types\";\nimport { Button } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nconst CustomButton = styled(Button)(({ bgc, hover }) => ({\n  \":hover\": {\n    backgroundColor: hover,\n  },\n  color: \"white\",\n  backgroundColor: bgc,\n  minWidth: 120,\n  fontSize: 18,\n  letterSpacing: 2,\n  margin: \"20px 0\",\n}));\n\nconst StyledButton = ({ bgc, hover, ariaLabel, label, type, onClick }) => (\n  <CustomButton\n    bgc={bgc}\n    hover={hover}\n    aria-label={ariaLabel}\n    type={type}\n    onClick={onClick}\n  >\n    {label}\n  </CustomButton>\n);\n\nStyledButton.propTypes = {\n  bgc: PropTypes.string.isRequired,\n  hover: PropTypes.string.isRequired,\n  ariaLabel: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default StyledButton;\n","import PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Paper, Box, Collapse, Divider } from \"@mui/material\";\nimport { Grid, Typography, Container } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\n\nimport api from \"api\";\nimport {\n  TextInputController,\n  SelectInputController,\n  StyledCheckbox,\n} from \"components/Inputs\";\nimport { StyledButton } from \"components/StyledButton\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { capitalizeFirstLetter, validationSubscriber } from \"helpers\";\n\nconst selectStatusData = [\n  { value: \"change status\", label: \"change status*\" },\n  { value: \"blocked\", label: \"blocked\" },\n  { value: \"pending\", label: \"pending\" },\n  { value: \"active\", label: \"active\" },\n];\n\nconst style = {\n  paper: {\n    maxWidth: 600,\n    margin: \"auto\",\n    borderRadius: 8,\n    backgroundColor: \"#142F43\",\n  },\n  typographyRequiredText: { color: \"orange\", letterSpacing: 2, wordSpacing: 3 },\n  titlePopup: { color: \"green\", fontWeight: \"bold\" },\n  subscriberName: { color: \"green\" },\n  labelCheckbox: {\n    fontSize: \"1rem\",\n    color: \"orange\",\n    paddingLeft: 8,\n    letterSpacing: 1,\n  },\n  checkbox: {\n    transform: \"scale(1.1)\",\n    color: \"orange\",\n    \"&.Mui-checked\": {\n      color: \"orange\",\n    },\n  },\n  icon: { color: \"orange\", fontSize: 30, marginTop: 6 },\n};\n\nconst AddSubscriberPage = ({\n  getSubscribersData,\n  setOpenInfoPopup,\n  setContentPopup,\n}) => {\n  const [isCheckboxChecked, setCheckboxState] = useState(false);\n  const endpoint = \"/subscribers\";\n\n  const {\n    handleSubmit,\n    control,\n    formState,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(validationSubscriber(isCheckboxChecked)),\n  });\n\n  const handleCheckboxOnChange = () => setCheckboxState(!isCheckboxChecked);\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset({\n        name: \"\",\n        surname: \"\",\n        profession: \"\",\n        status: \"change status\",\n        email: \"\",\n        salary: \"\",\n        telephone: \"\",\n      });\n\n      // setCheckboxState(false);\n    }\n  }, [formState, reset]);\n\n  const onSubmit = (data) => {\n    api.post(endpoint, {\n      fields: {\n        name: data.name,\n        surname: data.surname,\n        email: data.email,\n        profession: isCheckboxChecked ? data.profession : \"\",\n        status: isCheckboxChecked ? data.status : \"pending\",\n        salary: isCheckboxChecked ? String(data.salary) : \"\",\n        telephone: isCheckboxChecked ? data.telephone : \"\",\n      },\n    });\n\n    setContentPopup({\n      title: <span style={style.titlePopup}>That's great 🎊</span>,\n      text: (\n        <>\n          Subscriber\n          <span style={style.subscriberName}>\n            <strong> {capitalizeFirstLetter(data.name)} </strong>\n          </span>\n          has been added to the Airtable 😁\n        </>\n      ),\n      colorButton: \"success\",\n    });\n\n    getSubscribersData();\n\n    setOpenInfoPopup(true);\n    setTimeout(() => {\n      setOpenInfoPopup(false);\n    }, 3_000);\n  };\n\n  return (\n    <Container>\n      <StyledHeading label=\"Add Subscriber:\" />\n\n      <Paper elevation={14} style={style.paper}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Box px={3} py={3}>\n            <Grid container spacing={4}>\n              <Grid item xs={12}>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body2\"\n                  style={style.typographyRequiredText}\n                >\n                  *Fields required\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <TextInputController\n                  control={control}\n                  name=\"name\"\n                  error={!!errors.name}\n                  message={errors.name?.message ?? \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextInputController\n                  control={control}\n                  name=\"surname\"\n                  error={!!errors.surname}\n                  message={errors.surname?.message ?? \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextInputController\n                  control={control}\n                  name=\"email\"\n                  error={!!errors.email}\n                  message={errors.email?.message ?? \"\"}\n                />\n              </Grid>\n              <Grid container item xs={12}>\n                <Grid item xs={11}>\n                  <StyledCheckbox\n                    sx={style.checkbox}\n                    style={style.labelCheckbox}\n                    defaultValue={false}\n                    onChange={handleCheckboxOnChange}\n                    label=\"Add More Details\"\n                  />\n                </Grid>\n                <Grid item xs={1}>\n                  {isCheckboxChecked ? (\n                    <ExpandLess style={style.icon} />\n                  ) : (\n                    <ExpandMore style={style.icon} />\n                  )}\n                </Grid>\n              </Grid>\n\n              <Collapse in={isCheckboxChecked} timeout=\"auto\" unmountOnExit>\n                <Box px={2} py={3}>\n                  <Grid container spacing={4}>\n                    <Grid item xs={12}>\n                      <SelectInputController\n                        control={control}\n                        name=\"status\"\n                        error={!!errors.status}\n                        message={errors.status?.message ?? \"\"}\n                        defaultValue=\"change status\"\n                        data={selectStatusData}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextInputController\n                        control={control}\n                        name=\"profession\"\n                        error={!!errors.profession}\n                        message={errors.profession?.message ?? \"\"}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextInputController\n                        control={control}\n                        name=\"salary\"\n                        error={!!errors.salary}\n                        message={errors.salary?.message ?? \"\"}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextInputController\n                        control={control}\n                        name=\"telephone\"\n                        error={!!errors.telephone}\n                        message={errors.telephone?.message ?? \"\"}\n                      />\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Collapse>\n\n              <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"space-evenly\"\n                alignItems=\"center\"\n              >\n                <Grid item>\n                  <StyledButton\n                    hover=\"#286a2b\"\n                    bgc=\"#2e7d32\"\n                    label=\"submit\"\n                    ariaLabel=\"add\"\n                    type=\"submit\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nAddSubscriberPage.propTypes = {\n  getSubscribersData: PropTypes.func.isRequired,\n  setOpenInfoPopup: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default AddSubscriberPage;\n","export const dataHeadEmailTable = [\n  \"No\",\n  \"Title\",\n  \"Content\",\n  \"Created\",\n  \"Status\",\n  \"Edit\",\n  \"Remove\",\n];\n\n/*\n\n- \"remove campaign\" when email has got draft status: add button\n- edit campaign when is draft status\n\n<- solution ->\na) add button named \"draft\" when status is DRAFT\nb) add icon \"done\" when status is SEND\n\n*/\n","export default __webpack_public_path__ + \"static/media/success.739fd184.png\";","import PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Tooltip, Zoom } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport successIcon from \"./success.png\";\nimport {\n  isEven,\n  getFormattedData,\n  getStatusColor,\n  capitalizeFirstLetter,\n} from \"../../helpers\";\n\nconst style = {\n  typography: {\n    padding: \"9px 20px\",\n    letterSpacing: 2,\n    textTransform: \"uppercase\",\n    fontSize: 11,\n    width: 60,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  button: {\n    fontSize: 12,\n    letterSpacing: 2,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  icon: { marginLeft: 10 },\n  toolip: {\n    height: \"50px\",\n    width: \"50px\",\n  },\n};\n\nconst useStyles = makeStyles(() => ({\n  status: {\n    fontWeight: \"bold\",\n    fontSize: \"0.75rem\",\n    color: \"white\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 8,\n    padding: \"3px 10px\",\n    display: \"inline-block\",\n  },\n}));\n\nconst RowCampaign = (props) => {\n  const {\n    campaign,\n    index,\n    children,\n    setSelectedData,\n    handleEditDetailsCampaign,\n    setOpenConfirmPopup,\n    setContentPopup,\n  } = props;\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  return (\n    <TableRow\n      key={`${campaign.id}`}\n      style={{ backgroundColor: isEven(index, \"#F5F5F5\") }}\n    >\n      {children}\n      <TableCell>\n        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n          {capitalizeFirstLetter(campaign.fields.title)}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n          {campaign.fields.description}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography color=\"textSecondary\" variant=\"subtitle1\">\n          {getFormattedData(campaign.createdTime)}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <span>\n          <Typography\n            key={index}\n            className={classes.status}\n            style={{\n              backgroundColor: getStatusColor(campaign.fields.status),\n              ...style.typography,\n            }}\n          >\n            {campaign.fields.status}\n          </Typography>\n        </span>\n      </TableCell>\n      <TableCell>\n        {campaign.fields.status === \"draft\" ? (\n          <Button\n            style={style.button}\n            aria-label=\"edit\"\n            color=\"success\"\n            variant=\"contained\"\n            onClick={() => {\n              handleEditDetailsCampaign(campaign);\n              navigate(`/campaigns/details/${campaign.id}`);\n            }}\n          >\n            Edit\n          </Button>\n        ) : (\n          <div>\n            <Tooltip\n              title=\"No edit\"\n              placement=\"right-start\"\n              TransitionComponent={Zoom}\n            >\n              <img src={successIcon} alt=\"success-icon\" style={style.toolip} />\n            </Tooltip>\n          </div>\n        )}\n      </TableCell>\n      <TableCell>\n        <Button\n          aria-label=\"delete\"\n          color=\"error\"\n          variant=\"contained\"\n          startIcon={<DeleteIcon style={style.icon} />}\n          onClick={() => {\n            setOpenConfirmPopup(true);\n            setSelectedData(campaign);\n            setContentPopup({\n              title: capitalizeFirstLetter(campaign.fields.title),\n            });\n          }}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nRowCampaign.propTypes = {\n  campaign: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired,\n    createdTime: PropTypes.string.isRequired,\n    fields: PropTypes.shape({\n      status: PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n    }).isRequired,\n  }),\n  index: PropTypes.number.isRequired,\n  children: PropTypes.object.isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  handleEditDetailsCampaign: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default RowCampaign;\n","import PropTypes from \"prop-types\";\nimport { TableCell } from \"@material-ui/core\";\nimport { ContainerTable, HeadTable, BodyTable } from \"../Table\";\nimport { CampaignTableRow } from \"../CampaignTableRow\";\n\nconst CampaignsList = ({\n  subHeading,\n  dataHeadEmailTable,\n  campaignsData,\n  handleEditDetailsCampaign,\n  setSelectedData,\n  setContentPopup,\n  setOpenConfirmPopup,\n}) => {\n  return (\n    <ContainerTable subHeading={subHeading}>\n      <HeadTable dataHeadTable={dataHeadEmailTable} />\n      <BodyTable>\n        {campaignsData &&\n          campaignsData.map((campaign, index) => (\n            <CampaignTableRow\n              children={\n                <TableCell component=\"th\" scope=\"row\">\n                  {++index}.\n                </TableCell>\n              }\n              key={`id-${campaign.id}`}\n              campaign={{ ...campaign, group: \"campaigns\" }}\n              index={index}\n              setSelectedData={setSelectedData}\n              handleEditDetailsCampaign={handleEditDetailsCampaign}\n              setContentPopup={setContentPopup}\n              setOpenConfirmPopup={setOpenConfirmPopup}\n            />\n          ))}\n      </BodyTable>\n    </ContainerTable>\n  );\n};\n\nCampaignsList.propTypes = {\n  subHeading: PropTypes.string.isRequired,\n  dataHeadEmailTable: PropTypes.array.isRequired,\n  campaignsData: PropTypes.array.isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n};\n\nexport default CampaignsList;\n","import PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\n\nimport { dataHeadEmailTable } from \"data/dataHeadEmailTable\";\nimport { CampaignsList } from \"components/CampaignsList\";\nimport { Loader, Error } from \"components/DisplayMessage\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { getLatestAddedItem, sortDataAlphabetically } from \"helpers\";\n\nconst CampaignsPage = ({\n  campaignsData,\n  setSelectedData,\n  handleEditDetailsCampaign,\n  setOpenConfirmPopup,\n  setContentPopup,\n}) => {\n  sortDataAlphabetically(campaignsData.data);\n\n  const latestAddedCampaign = getLatestAddedItem(campaignsData.data);\n  return (\n    <>\n      {campaignsData.status === \"loading\" ? (\n        <Loader title=\"Campaigns\" />\n      ) : campaignsData.status === \"error\" ? (\n        <Error\n          titleOne=\"ERROR MESSAGE\"\n          titleTwo=\"Check access to the data from airtable base.\"\n          titleThree=\"Also, please check your internet connection.\"\n        />\n      ) : (\n        <Container\n          style={{\n            // padding: \"10px 50px\",\n            marginTop: 40,\n            backgroundColor: \"rgba(255,255,255,0.1)\",\n            backdropFilter: \"blur(5px)\",\n            borderRadius: 6,\n          }}\n        >\n          {campaignsData.status === \"success\" && !campaignsData.data.length ? (\n            <Error\n              titleOne=\"There are not campaigns added yet.\"\n              titleTwo=\"Please add a new campaign.\"\n              titleThree=\"🙂\"\n            />\n          ) : (\n            <>\n              <StyledHeading label=\"Campaigns:\" />\n\n              <CampaignsList\n                subHeading=\"List:\"\n                dataHeadEmailTable={dataHeadEmailTable}\n                campaignsData={campaignsData.data}\n                setSelectedData={setSelectedData}\n                handleEditDetailsCampaign={handleEditDetailsCampaign}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n            </>\n          )}\n\n          {campaignsData.data.length > 1 ? (\n            <CampaignsList\n              subHeading=\"Latest added Campaign:\"\n              dataHeadEmailTable={dataHeadEmailTable}\n              campaignsData={latestAddedCampaign}\n              handleEditDetailsCampaign={handleEditDetailsCampaign}\n              setSelectedData={setSelectedData}\n              setContentPopup={setContentPopup}\n              setOpenConfirmPopup={setOpenConfirmPopup}\n            />\n          ) : (\n            \"\"\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nCampaignsPage.propTypes = {\n  campaignsData: PropTypes.shape({\n    status: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  handleEditDetailsCampaign: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default CampaignsPage;\n","import PropTypes from \"prop-types\";\nimport { TableCell } from \"@material-ui/core\";\n\nimport { ContainerTable, HeadTable, BodyTable } from \"../Table\";\nimport { CampaignTableRow } from \"../CampaignTableRow\";\n\nconst CampaignStatus = (props) => {\n  const {\n    subHeading,\n    dataHeadEmailTable,\n    campaignsData,\n    status,\n    handleEditDetailsCampaign,\n    setSelectedData,\n    setContentPopup,\n    setOpenConfirmPopup,\n  } = props;\n\n  return campaignsData &&\n    campaignsData.some((el) => el.fields.status === status) ? (\n    <ContainerTable subHeading={subHeading}>\n      <HeadTable dataHeadTable={dataHeadEmailTable} />\n\n      <BodyTable>\n        {campaignsData &&\n          campaignsData\n            .filter((subscriber) => subscriber.fields.status === status)\n            .map((campaign, index) => (\n              <CampaignTableRow\n                children={\n                  <TableCell component=\"th\" scope=\"row\">\n                    {++index}.\n                  </TableCell>\n                }\n                key={`id-${campaign.id}`}\n                campaign={{ ...campaign, group: \"campaigns\" }}\n                index={index}\n                setSelectedData={setSelectedData}\n                handleEditDetailsCampaign={handleEditDetailsCampaign}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n            ))}\n      </BodyTable>\n    </ContainerTable>\n  ) : (\n    \"\"\n  );\n};\n\nCampaignStatus.propTypes = {\n  subHeading: PropTypes.string.isRequired,\n  dataHeadEmailTable: PropTypes.array.isRequired,\n  campaignsData: PropTypes.array.isRequired,\n  status: PropTypes.string.isRequired,\n  handleEditDetailsCampaign: PropTypes.func.isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n};\n\nexport default CampaignStatus;\n","import PropTypes from \"prop-types\";\nimport { Container } from \"@material-ui/core\";\n\nimport { CampaignStatus } from \"components/CampaignStatus\";\nimport { Loader, Error } from \"components/DisplayMessage\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { dataHeadEmailTable } from \"data/dataHeadEmailTable\";\n\nconst CampaignsStatusPage = (props) => {\n  const {\n    campaignsData,\n    handleEditDetailsCampaign,\n    setOpenConfirmPopup,\n    setSelectedData,\n    setContentPopup,\n  } = props;\n\n  return (\n    <>\n      {campaignsData.status === \"loading\" ? (\n        <Loader title=\"Campaigns\" />\n      ) : campaignsData.status === \"error\" ? (\n        <Error\n          titleOne=\"ERROR MESSAGE\"\n          titleTwo=\"Probably there is no an access to the internet.\"\n          titleThree=\"Contact with your internet provider.\"\n        />\n      ) : (\n        <Container>\n          {campaignsData.status === \"success\" && !campaignsData.data.length ? (\n            <Error\n              titleOne=\"There are not campaigns added yet.\"\n              titleTwo=\"Please add a new campaign.\"\n              titleThree=\"🙂\"\n            />\n          ) : (\n            <>\n              <StyledHeading label=\"Campaigns Status:\" />\n\n              <CampaignStatus\n                subHeading=\"Sent:\"\n                dataHeadEmailTable={dataHeadEmailTable}\n                campaignsData={campaignsData.data}\n                status=\"sent\"\n                setSelectedData={setSelectedData}\n                handleEditDetailsCampaign={handleEditDetailsCampaign}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n\n              <CampaignStatus\n                subHeading=\"Draft:\"\n                dataHeadEmailTable={dataHeadEmailTable}\n                campaignsData={campaignsData.data}\n                status=\"draft\"\n                setSelectedData={setSelectedData}\n                handleEditDetailsCampaign={handleEditDetailsCampaign}\n                setContentPopup={setContentPopup}\n                setOpenConfirmPopup={setOpenConfirmPopup}\n              />\n            </>\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nCampaignsStatusPage.propTypes = {\n  campaignsData: PropTypes.shape({\n    status: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.object),\n    latestAddedItem: PropTypes.arrayOf(PropTypes.object),\n  }),\n  handleEditDetailsCampaign: PropTypes.func.isRequired,\n  setSelectedData: PropTypes.func.isRequired,\n  setOpenConfirmPopup: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default CampaignsStatusPage;\n","import PropTypes from \"prop-types\";\nimport { Paper, Box, Grid, Typography } from \"@material-ui/core\";\n\nimport { TextInputController } from \"../Inputs\";\nimport { StyledButton } from \"../StyledButton\";\n\nconst style = {\n  paper: {\n    maxWidth: 600,\n    margin: \"20px auto\",\n    borderRadius: 8,\n    backgroundColor: \"#142F43\",\n  },\n  typography: { color: \"orange\", letterSpacing: 2, wordSpacing: 3 },\n};\n\nconst FormCampaign = ({\n  handleSubmit,\n  handleDraftData,\n  handleSendData,\n  control,\n  errors,\n}) => (\n  <Paper elevation={14} style={style.paper}>\n    <form>\n      <Box px={3} py={3}>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n              style={style.typography}\n            >\n              *Fields required\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <TextInputController\n              control={control}\n              name=\"title\"\n              error={!!errors.title}\n              message={errors.title?.message ?? \"\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextInputController\n              control={control}\n              name=\"description\"\n              multiline\n              rows={5}\n              error={!!errors.description}\n              message={errors.description?.message ?? \"\"}\n            />\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"space-evenly\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <StyledButton\n                hover=\"#cf890a\"\n                bgc=\"#ffa500\"\n                label=\"draft\"\n                ariaLabel=\"draft\"\n                type=\"submit\"\n                onClick={handleSubmit(handleDraftData)}\n              />\n            </Grid>\n            <Grid item>\n              <StyledButton\n                hover=\"#286a2b\"\n                bgc=\"#2e7d32\"\n                label=\"send\"\n                ariaLabel=\"send\"\n                type=\"submit\"\n                onClick={handleSubmit(handleSendData)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </form>\n  </Paper>\n);\n\nFormCampaign.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  // onSubmit: PropTypes.func.isRequired,\n  errors: PropTypes.object,\n  // setCampaignStatus: PropTypes.func.isRequired,\n};\n\nexport default FormCampaign;\n","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { Container } from \"@material-ui/core\";\nimport emailjs from \"emailjs-com\";\n\nimport api from \"api\";\nimport { useFetchDetailsById } from \"useFetchDetailsById\";\nimport { capitalizeFirstLetter, validationCampaign } from \"helpers\";\nimport { FormCampaign } from \"components/FormCampaign\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { Loader, Error } from \"components/DisplayMessage\";\n\nconst { REACT_APP_MAIL_USER, REACT_APP_MAIL_TEMPLATE, REACT_APP_MAIL_KEY } =\n  process.env;\n\nconst CampaignEditPage = ({\n  campaignsData,\n  subscribersData,\n  getCampaignsData,\n  setOpenInfoPopup,\n  setContentPopup,\n}) => {\n  const {\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    control,\n  } = useForm({\n    resolver: yupResolver(validationCampaign),\n  });\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const endpoint = `/campaigns/${id}`;\n\n  const { itemData: campaignData } = useFetchDetailsById(endpoint);\n  const [isEmailError, setEmailError] = useState(false);\n\n  const defaultValues = {\n    title: campaignData.data ? campaignData.data.fields.title : \"\",\n    description: campaignData.data ? campaignData.data.fields.description : \"\",\n  };\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setValue(\"title\", defaultValues.title);\n      setValue(\"description\", defaultValues.description);\n    }, 300);\n\n    return () => clearTimeout(timeoutId);\n  }, [setValue, defaultValues.title, defaultValues.description]);\n\n  const patchData = (data, status) => {\n    api.patch(endpoint, {\n      fields: {\n        title: capitalizeFirstLetter(data.title),\n        description: capitalizeFirstLetter(data.description),\n        status: status,\n      },\n    });\n  };\n\n  // check if Campaign's id is available, otherwise return Error\n  let isIdCorrect = null;\n\n  if (id !== undefined && campaignsData.data !== null) {\n    isIdCorrect = Boolean(campaignsData.data.find((item) => item.id === id));\n  }\n\n  if (isIdCorrect === false || campaignData.status === \"error\") {\n    return (\n      <Error\n        titleOne=\"Unfortunately, this Campaign does not exist.\"\n        titleTwo=\"Check the url address.\"\n        titleThree=\"Back to Subscribers.\"\n      />\n    );\n  }\n\n  const displayPopup = (data, status, changeRoute) => {\n    const isCampaignChanged =\n      data.title !== campaignData.data.fields.title ||\n      data.description !== campaignData.data.fields.description;\n\n    const campaignTitle = (\n      <span style={status ? { color: \"green\" } : { color: \"orange\" }}>\n        <strong> {capitalizeFirstLetter(data.title)} </strong>\n      </span>\n    );\n\n    const addTimeout = () => {\n      const timeoutId = setTimeout(() => {\n        setOpenInfoPopup(false);\n\n        changeRoute();\n      }, 3_000);\n\n      return () => clearTimeout(timeoutId);\n    };\n\n    setContentPopup({\n      title: status ? (\n        <span style={{ color: \"green\", fontWeight: \"bold\" }}>\n          That's great 🎊\n        </span>\n      ) : (\n        <span style={{ color: \"orange\", fontWeight: \"bold\" }}>\n          Still draft... 🙂\n        </span>\n      ),\n      text:\n        isCampaignChanged && status ? (\n          <> Campaign {campaignTitle} has been changed and finally sent 🙂</>\n        ) : !isCampaignChanged && !status ? (\n          <>\n            Campaign {campaignTitle} has not been changed and status still is\n            draft 🙂\n          </>\n        ) : !isCampaignChanged && status ? (\n          <>Campaign {campaignTitle} has not been changed but finally sent 🙂</>\n        ) : isCampaignChanged && !status ? (\n          <>\n            Campaign {campaignTitle} has been changed and status still is draft\n            🙂\n          </>\n        ) : (\n          <>Campaign {campaignTitle} has not been changed but finally sent 🙂</>\n        ),\n      colorButton: \"success\",\n    });\n\n    setOpenInfoPopup(true);\n\n    addTimeout();\n  };\n\n  const handleDraftCampaign = (data) => {\n    if (\n      data.title !== campaignData.data.fields.title ||\n      data.description !== campaignData.data.fields.description\n    ) {\n      patchData(data, \"draft\");\n\n      getCampaignsData();\n    }\n\n    displayPopup(data, false, () => navigate(\"/campaigns\"));\n  };\n\n  const handleSendCampaign = (data) => {\n    if (subscribersData.data) {\n      subscribersData.data\n        .filter((subscriber) => subscriber.fields.status === \"active\")\n        .forEach((subscriber) => {\n          const inputsData = {\n            name: subscriber.fields.name,\n            email: subscriber.fields.email,\n            title: data.title,\n            description: data.description,\n          };\n          // REACT_APP_MAIL_USER,\n          emailjs\n            .send(\n              \"ereyeryery\",\n              REACT_APP_MAIL_TEMPLATE,\n              inputsData,\n              REACT_APP_MAIL_KEY\n            )\n            .then(() => {\n              patchData(data, \"sent\");\n\n              displayPopup(data, true, navigate(\"/campaigns\"));\n\n              getCampaignsData();\n            })\n            .catch((err) => {\n              console.log(\"Unfortunately,\", err);\n\n              setEmailError(true);\n            });\n        });\n    }\n  };\n\n  return (\n    <>\n      {isEmailError ? (\n        <Error\n          titleOne=\"Unfortunately, the Campaign has not been sent\"\n          titleTwo=\"Probably there is a problem with EmailJS application at the moment\"\n          titleThree=\"That's why the Campaign has been drafted\"\n        />\n      ) : campaignData.status === \"loading\" ? (\n        <Loader title=\"Campaign Details\" />\n      ) : campaignData.status === \"error\" ? (\n        <Error\n          titleOne=\"ERROR MESSAGE\"\n          titleTwo=\"Check the url address again.\"\n          titleThree=\"Maybe there is no an access to the internet.\"\n        />\n      ) : (\n        <Container>\n          <StyledHeading label=\"Edit Campaign:\" />\n\n          <FormCampaign\n            handleSubmit={handleSubmit}\n            handleDraftData={handleDraftCampaign}\n            handleSendData={handleSendCampaign}\n            control={control}\n            errors={errors}\n          />\n        </Container>\n      )}\n    </>\n  );\n};\n\nCampaignEditPage.propTypes = {\n  campaignsData: PropTypes.shape({\n    status: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  subscribersData: PropTypes.shape({\n    status: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  getCampaignsData: PropTypes.func.isRequired,\n  setOpenInfoPopup: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default CampaignEditPage;\n","import PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Container } from \"@material-ui/core\";\nimport emailjs from \"emailjs-com\";\n\nimport api from \"api\";\nimport { capitalizeFirstLetter, validationCampaign } from \"helpers\";\nimport { FormCampaign } from \"components/FormCampaign\";\nimport { StyledHeading } from \"components/StyledHeading\";\nimport { Error } from \"components/DisplayMessage\";\n\nconst { REACT_APP_MAIL_USER, REACT_APP_MAIL_TEMPLATE, REACT_APP_MAIL_KEY } =\n  process.env;\n\nconst postData = (data, status) => {\n  const endpoint = \"/campaigns\";\n\n  api.post(endpoint, {\n    fields: {\n      title: capitalizeFirstLetter(data.title),\n      description: capitalizeFirstLetter(data.description),\n      status: status,\n    },\n  });\n};\n\nconst AddCampaignPage = ({\n  subscribersData,\n  getCampaignsData,\n  setOpenInfoPopup,\n  setContentPopup,\n}) => {\n  const {\n    handleSubmit,\n    control,\n    formState,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(validationCampaign),\n  });\n\n  const [isEmailError, setEmailError] = useState(false);\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful)\n      reset({\n        title: \"\",\n        description: \"\",\n      });\n  }, [formState, reset]);\n\n  const displayPopup = (data, status) => {\n    const styledTextPopup = status\n      ? { color: \"green\", fontWeight: \"bold\" }\n      : { color: \"orange\", fontWeight: \"bold\" };\n\n    const addTimeout = () => {\n      const timeoutId = setTimeout(() => {\n        setOpenInfoPopup(false);\n      }, 3_000);\n\n      return () => clearTimeout(timeoutId);\n    };\n\n    setContentPopup({\n      title: (\n        <span style={styledTextPopup}>{status ? \"Sent!\" : \"Drafted!\"} 🎊\"</span>\n      ),\n      text: (\n        <>\n          Campaign\n          <span style={styledTextPopup}>\n            <strong> {capitalizeFirstLetter(data.title)} </strong>\n          </span>\n          has been {status ? \"sent\" : \"drafted and added\"} to the Airtable 😁\n        </>\n      ),\n      colorButton: \"success\",\n    });\n\n    addTimeout();\n    setOpenInfoPopup(true);\n  };\n\n  const handleDraftCampaign = (data) => {\n    postData(data, \"draft\");\n    getCampaignsData();\n    displayPopup(data, false);\n  };\n\n  const handleSendCampaign = (data) => {\n    if (subscribersData.data) {\n      subscribersData.data\n        .filter((subscriber) => subscriber.fields.status === \"active\")\n        .forEach((subscriber) => {\n          const inputsData = {\n            name: subscriber.fields.name,\n            email: subscriber.fields.email,\n            title: data.title,\n            description: data.description,\n          };\n          // REACT_APP_MAIL_USER,\n          emailjs\n            .send(\n              \"sgswdgsdg\",\n              REACT_APP_MAIL_TEMPLATE,\n              inputsData,\n              REACT_APP_MAIL_KEY\n            )\n            .then(() => {\n              postData(data, \"sent\");\n              displayPopup(data, true);\n            })\n            .catch((err) => {\n              console.log(\"Unfortunately,\", err);\n              postData(data, \"draft\");\n              setEmailError(true);\n              displayPopup(data, false);\n            });\n        });\n    }\n    getCampaignsData();\n  };\n\n  return (\n    <>\n      {isEmailError ? (\n        <Error\n          titleOne=\"Unfortunately, the Campaign has not been sent\"\n          titleTwo=\"Probably there is a problem with EmailJS application at the moment\"\n          titleThree=\"That's why the Campaign has been drafted now\"\n        />\n      ) : (\n        <Container\n          style={{\n            padding: \"10px 50px 60px 50px\",\n            marginTop: 40,\n            backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n            backdropFilter: \"blur(5px)\",\n            borderRadius: 6,\n          }}\n        >\n          <StyledHeading label=\"Add Campaign:\" />\n\n          <FormCampaign\n            handleSubmit={handleSubmit}\n            handleDraftData={handleDraftCampaign}\n            handleSendData={handleSendCampaign}\n            control={control}\n            errors={errors}\n          />\n        </Container>\n      )}\n    </>\n  );\n};\n\nAddCampaignPage.propTypes = {\n  subscribersData: PropTypes.shape({\n    status: PropTypes.string,\n    data: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n  getCampaignsData: PropTypes.func.isRequired,\n  setOpenInfoPopup: PropTypes.func.isRequired,\n  setContentPopup: PropTypes.func.isRequired,\n};\n\nexport default AddCampaignPage;\n","export const mainLinksNavigation = [\n  { to: \"/subscribers\", name: \"Subscribers\" },\n  { to: \"/campaigns\", name: \"Campaigns\" },\n  { to: \"/\", exact: true, name: \"Home\" },\n];\n\nexport const subscribersLinksNavigation = [\n  {\n    to: \"\",\n    exact: true,\n    name: \"Subscribers\",\n  },\n  {\n    to: \"filter\",\n    name: \"Status\",\n  },\n  {\n    to: \"add\",\n    name: \"Add\",\n  },\n];\n\nexport const campaignsLinksNavigation = [\n  {\n    to: \"\",\n    exact: true,\n    name: \"Campaigns\",\n  },\n  {\n    to: \"filter\",\n    name: \"Status\",\n  },\n  {\n    to: \"add\",\n    name: \"Add\",\n  },\n];\n","import { useState, useEffect } from \"react\";\n\nimport { Loader, Error } from \"components/DisplayMessage\";\n\nconst NotFoundPage = () => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setLoading(false);\n    }, 500);\n\n    return () => clearInterval(intervalId);\n  });\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Error\n          titleOne=\"Page Not Found\"\n          titleTwo=\"Please make sure that url address is correct.\"\n          titleThree=\"🙂\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import { useState } from \"react\";\nimport { useRoutes, useNavigate } from \"react-router-dom\";\n\nimport \"App.css\";\nimport api from \"api\";\nimport { useFetchData } from \"useFetchData\";\nimport { MainNavigation, SubNavigation } from \"components/Navigation\";\nimport { StyledFooter } from \"components/StyledFooter\";\nimport { HomePage } from \"pages/homePage\";\nimport {\n  SubscribersPage,\n  SubscribersStatusPage,\n  AddSubscriberPage,\n  SubscriberDetailsPage,\n} from \"pages/subscribers\";\nimport {\n  CampaignEditPage,\n  AddCampaignPage,\n  CampaignsPage,\n  CampaignsStatusPage,\n} from \"pages/campaigns\";\nimport { InfoPopup, ConfirmPopup } from \"components/DisplayMessage\";\nimport {\n  subscribersLinksNavigation,\n  campaignsLinksNavigation,\n} from \"data/dataLinksNavigation\";\nimport { NotFoundPage } from \"pages/notFoundPage\";\n\nconst AppContainer = () => {\n  const navigate = useNavigate();\n  const [openInfoPopup, setOpenInfoPopup] = useState(false);\n  const [contentPopup, setContentPopup] = useState({});\n  const [openConfirmPopup, setOpenConfirmPopup] = useState(false);\n  const [selectedData, setSelectedData] = useState({});\n  const [tabsValue, setTabsValue] = useState(0);\n\n  const endpointSubscribers = \"/subscribers\";\n  const endpointCampaigns = \"/campaigns\";\n\n  const {\n    data: subscribersData,\n    setData: setSubscribersData,\n    getData: getSubscribersData,\n  } = useFetchData(endpointSubscribers);\n\n  const {\n    data: campaignsData,\n    setData: setCampaignsData,\n    getData: getCampaignsData,\n  } = useFetchData(endpointCampaigns);\n\n  const removeItemFromAirtable = async (endpoint, id) =>\n    await api.delete(`/${endpoint}/${id}`);\n\n  const handleRemoveItem = () => {\n    const nameGroup = selectedData?.group;\n    const selectedId = selectedData.id;\n\n    const filteredGroup = (group) =>\n      group.data.filter((item) => item.id !== selectedId);\n\n    if (nameGroup === \"subscribers\") {\n      setSubscribersData({\n        status: \"success\",\n        data: filteredGroup(subscribersData),\n      });\n    }\n\n    if (nameGroup === \"campaigns\") {\n      setCampaignsData({\n        status: \"success\",\n        data: filteredGroup(campaignsData),\n      });\n    }\n\n    removeItemFromAirtable(nameGroup, selectedId);\n    setOpenConfirmPopup(false);\n  };\n\n  const handleSubscriberDetails = (subscriber) =>\n    subscriber.fields.status === \"active\"\n      ? navigate(`/subscribers/details/${subscriber.id}`)\n      : setOpenInfoPopup(true);\n\n  const handleEditDetailsCampaign = (campaign) => {\n    campaign.fields.status === \"draft\"\n      ? navigate(`/campaigns/details/${campaign.id}`)\n      : setOpenInfoPopup(true);\n  };\n\n  const routes = [\n    { path: \"/\", element: <HomePage /> },\n    {\n      path: \"subscribers\",\n      element: <SubNavigation dataLinks={subscribersLinksNavigation} />,\n      children: [\n        {\n          path: \"/\",\n          element: (\n            <SubscribersPage\n              subscribersData={subscribersData}\n              setSelectedData={setSelectedData}\n              handleSubscriberDetails={handleSubscriberDetails}\n              setContentPopup={setContentPopup}\n              setOpenInfoPopup={setOpenInfoPopup}\n              setOpenConfirmPopup={setOpenConfirmPopup}\n            />\n          ),\n        },\n        {\n          path: \"add\",\n          element: (\n            <AddSubscriberPage\n              setSubscribersData={setSubscribersData}\n              setContentPopup={setContentPopup}\n              setOpenInfoPopup={setOpenInfoPopup}\n              getSubscribersData={getSubscribersData}\n            />\n          ),\n        },\n        {\n          path: \"filter\",\n          element: (\n            <SubscribersStatusPage\n              subscribersData={subscribersData}\n              setSelectedData={setSelectedData}\n              handleSubscriberDetails={handleSubscriberDetails}\n              setContentPopup={setContentPopup}\n              setOpenInfoPopup={setOpenInfoPopup}\n              setOpenConfirmPopup={setOpenConfirmPopup}\n            />\n          ),\n        },\n        {\n          path: \"details/:id\",\n          element: <SubscriberDetailsPage subscribersData={subscribersData} />,\n        },\n        { path: \"*\", element: <NotFoundPage /> },\n      ],\n    },\n    {\n      path: \"campaigns\",\n      element: <SubNavigation dataLinks={campaignsLinksNavigation} />,\n      children: [\n        {\n          path: \"/\",\n          element: (\n            <CampaignsPage\n              campaignsData={campaignsData}\n              setSelectedData={setSelectedData}\n              handleEditDetailsCampaign={handleEditDetailsCampaign}\n              setContentPopup={setContentPopup}\n              setOpenConfirmPopup={setOpenConfirmPopup}\n            />\n          ),\n        },\n        {\n          path: \"filter\",\n          element: (\n            <CampaignsStatusPage\n              campaignsData={campaignsData}\n              setSelectedData={setSelectedData}\n              handleEditDetailsCampaign={handleEditDetailsCampaign}\n              setContentPopup={setContentPopup}\n              setOpenInfoPopup={setOpenInfoPopup}\n              setOpenConfirmPopup={setOpenConfirmPopup}\n            />\n          ),\n        },\n        {\n          path: \"add\",\n          element: (\n            <AddCampaignPage\n              subscribersData={subscribersData}\n              getCampaignsData={getCampaignsData}\n              setContentPopup={setContentPopup}\n              setOpenInfoPopup={setOpenInfoPopup}\n            />\n          ),\n        },\n        {\n          path: \"details/:id\",\n          element: (\n            <CampaignEditPage\n              campaignsData={campaignsData}\n              subscribersData={subscribersData}\n              getCampaignsData={getCampaignsData}\n              selectedData={selectedData}\n              setOpenInfoPopup={setOpenInfoPopup}\n              setContentPopup={setContentPopup}\n            />\n          ),\n        },\n      ],\n    },\n    { path: \"*\", element: <NotFoundPage /> },\n  ];\n\n  const routing = useRoutes(routes);\n\n  return (\n    <>\n      <MainNavigation tabsValue={tabsValue} setTabsValue={setTabsValue} />\n\n      <div className=\"routing-children\">{routing}</div>\n\n      <StyledFooter label=\"Coded By Szymon Rojek © 2021\" />\n\n      <InfoPopup\n        contentPopup={contentPopup}\n        openInfoPopup={openInfoPopup}\n        setOpenInfoPopup={setOpenInfoPopup}\n      />\n      <ConfirmPopup\n        handleRemoveItem={handleRemoveItem}\n        contentPopup={contentPopup}\n        openConfirmPopup={openConfirmPopup}\n        setOpenConfirmPopup={setOpenConfirmPopup}\n      />\n    </>\n  );\n};\n\nexport default AppContainer;\n","import AppContainer from \"./AppContainer\";\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"page-container\">\n    <AppContainer />\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from \"@material-ui/core/styles\";\n\nconst theme = createTheme();\n\ntheme.typography.h1 = {\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"2rem\",\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"3rem\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"4rem\",\n  },\n};\n\ntheme.typography.h2 = {\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"1.5rem\",\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"2rem\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"2.5rem\",\n  },\n};\n\ntheme.typography.h3 = {\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"1.3rem\",\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"1.7rem\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"2rem\",\n  },\n};\n\ntheme.typography.body2 = {\n  [theme.breakpoints.down(\"sm\")]: {\n    fontSize: \"1.2rem\",\n  },\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"1.5rem\",\n  },\n  [theme.breakpoints.up(\"md\")]: {\n    fontSize: \"1.7rem\",\n  },\n};\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"@mui/material/styles\";\n\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <HashRouter>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}